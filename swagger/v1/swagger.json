{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1",
    "description": "# Obtaining a Bearer token\n\nTo obtain a Bearer authentication token for your users you need to redirect them to the Identity Management login page: `https://ident.services/login/{APP_NAME}`. The site takes the following optional query parameters:\n- `redirect_host`: The target redirection URL (e.g. `https://my-app/user/visited/this/without/session`). The target hostname is validated against a whitelist. If the supplied hostname is not on the whitelist the user is redirected to the domain linked with your application.\n\nAfter the user logged in he is redirected to `/authenticated` on your site. The following parameters are passed as anchor (accessible via `window.location.hash` in your frontend):\n- `token` (string): The user Bearer token\n- `token_expire` (Unix Timestamp in milliseconds) The expire date of the token\n- `refresh_token` (string): Token to obtain a new Bearer token\n- `remember_me` (boolean): Has the user checked remember me? If true you should persist the `token`, `token_expire` and `refresh_token`, otherwise you should store them as client side cookies to remove them as the user closes his browser.\n- `redirect_path` (string, may be empty): Pathname of the URL passed to the login site as `redirect_host` (e.g. `/user/visited/this/without/session`)\n- `invite_token` (string, may be empty): User invitation token (if login comes from an invite email)\n\n# Refreshing the Bearer token\n\nTo refresh the Bearer token using a `refresh_token` please refer to the API documentation for the following endpoint `/api/v1/{APP_NAME}/oauth/token`"
  },
  "paths": {
    "/api/v1/access_control/app/{name}/groups": {
      "get": {
        "summary": "List Access control available groups for this app",
        "x-candos": [
          "identity-management/global.admin",
          "~/access-control.reader",
          "~/notifications.writer"
        ],
        "x-record-type": "access_control",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/global.admin\n- ~/access-control.reader\n- ~/notifications.writer\n---\nController: `Api::V1::AccessControl::App::GroupsController`\n\n",
        "tags": [
          "Access Control"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Access control name"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          }
        ],
        "responses": {
          "200": {
            "description": "AccessControls list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "description": "record type",
          "default": "access_control"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "label": {
              "type": "string",
              "description": "the label of this access group"
            },
            "group": {
              "type": "string",
              "description": "a grouping name"
            },
            "description": {
              "type": "string",
              "description": "describes the access this group grants (Markdown)"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/access_control/apps/{app_id}/groups": {
      "get": {
        "summary": "List Access control available groups for this app",
        "x-candos": [
          "identity-management/global.admin",
          "~/access-control.reader",
          "~/notifications.writer"
        ],
        "x-record-type": "access_control",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/global.admin\n- ~/access-control.reader\n- ~/notifications.writer\n---\nController: `Api::V1::AccessControl::Apps::GroupsController`\n\n",
        "tags": [
          "Access Control"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Access control app_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          }
        ],
        "responses": {
          "200": {
            "description": "AccessControls list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "description": "record type",
          "default": "access_control"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "label": {
              "type": "string",
              "description": "the label of this access group"
            },
            "group": {
              "type": "string",
              "description": "a grouping name"
            },
            "description": {
              "type": "string",
              "description": "describes the access this group grants (Markdown)"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/access_control/tenant/{tenant_id}/groups": {
      "get": {
        "summary": "List Access control available groups of this tenant",
        "x-candos": [
          "~/access-control.reader"
        ],
        "x-record-type": "access_control",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/access-control.reader\n---\nController: `Api::V1::AccessControl::Tenant::GroupsController`\n\n",
        "tags": [
          "Access Control"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Access control tenant_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          }
        ],
        "responses": {
          "200": {
            "description": "AccessControls list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "description": "record type",
          "default": "access_control"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "label": {
              "type": "string",
              "description": "the label of this access group"
            },
            "group": {
              "type": "string",
              "description": "a grouping name"
            },
            "description": {
              "type": "string",
              "description": "describes the access this group grants (Markdown)"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/access_control/tenant/{tenant_id}/users": {
      "get": {
        "summary": "List User accounts authorized groups",
        "x-candos": [
          "~/access-control.reader",
          "identity-management/apps.admin",
          "identity-management/global.admin"
        ],
        "x-record-type": "tenant_user_access_overview",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/access-control.reader\n- identity-management/apps.admin\n- identity-management/global.admin\n---\nController: `Api::V1::AccessControl::Tenant::UsersController`\n\n",
        "tags": [
          "Access Control"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account tenant_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `id`, `actor_id`, `locale`, `email`, `gender`, `title`, `first_name`, `last_name`, `created_at`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "id",
          "actor_id",
          "locale",
          "email",
          "gender",
          "title",
          "first_name",
          "last_name",
          "created_at"
        ],
        "responses": {
          "200": {
            "description": "Users list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "tenant_user_access_overview",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "access_group_ids": {
              "type": "array",
              "description": "id of an access group",
              "items": {
                "type": "string"
              }
            },
            "actor_id": {
              "type": "string",
              "description": "unique id of the users account"
            },
            "email": {
              "type": "string",
              "description": "registered email address"
            },
            "first_name": {
              "type": "string",
              "description": "the users first name"
            },
            "last_name": {
              "type": "string",
              "description": "the users last name"
            },
            "title": {
              "anyOf": [
                {
                  "type": "string",
                  "description": "the users title"
                },
                {
                  "type": "null"
                }
              ]
            },
            "gender": {
              "anyOf": [
                {
                  "type": "number",
                  "description": "the users gender (1=male, 2=female, 3=other)"
                },
                {
                  "type": "null"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "description": "account creation timestamp"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/access_control/tenant/{tenant_id}/users/{id}": {
      "get": {
        "summary": "Show user account authorized groups",
        "x-candos": [
          "~/access-control.reader",
          "identity-management/apps.admin",
          "identity-management/global.admin"
        ],
        "x-record-type": "tenant_user_access",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/access-control.reader\n- identity-management/apps.admin\n- identity-management/global.admin\n---\nController: `Api::V1::AccessControl::Tenant::UsersController`\n\n",
        "tags": [
          "Access Control"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          }
        ],
        "responses": {
          "200": {
            "description": "User view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "tenant_user_access_overview",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "access_group_ids": {
            "type": "array",
            "description": "id of an access group",
            "items": {
              "type": "string"
            }
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "registered email address"
          },
          "first_name": {
            "type": "string",
            "description": "the users first name"
          },
          "last_name": {
            "type": "string",
            "description": "the users last name"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "description": "the users title"
              },
              {
                "type": "null"
              }
            ]
          },
          "gender": {
            "anyOf": [
              {
                "type": "number",
                "description": "the users gender (1=male, 2=female, 3=other)"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "description": "account creation timestamp"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update user account authorized groups",
        "x-candos": [
          "~/access-control.writer",
          "identity-management/apps.admin",
          "identity-management/global.admin"
        ],
        "x-record-type": "tenant_user_access",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/access-control.writer\n- identity-management/apps.admin\n- identity-management/global.admin\n---\nController: `Api::V1::AccessControl::Tenant::UsersController`\n\n",
        "tags": [
          "Access Control"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "access_group_ids": {
                      "type": "array",
                      "description": "id of an access group",
                      "items": {
                        "type": "string"
                      }
                    },
                    "actor_id": {
                      "type": "string",
                      "description": "unique id of the users account"
                    },
                    "email": {
                      "type": "string",
                      "description": "registered email address"
                    },
                    "first_name": {
                      "type": "string",
                      "description": "the users first name"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "the users last name"
                    },
                    "title": {
                      "anyOf": [
                        {
                          "type": "string",
                          "description": "the users title"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "gender": {
                      "anyOf": [
                        {
                          "type": "number",
                          "description": "the users gender (1=male, 2=female, 3=other)"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "created_at": {
                      "type": "string",
                      "description": "account creation timestamp"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "tenant_user_access_overview",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "access_group_ids": {
            "type": "array",
            "description": "id of an access group",
            "items": {
              "type": "string"
            }
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "registered email address"
          },
          "first_name": {
            "type": "string",
            "description": "the users first name"
          },
          "last_name": {
            "type": "string",
            "description": "the users last name"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "description": "the users title"
              },
              {
                "type": "null"
              }
            ]
          },
          "gender": {
            "anyOf": [
              {
                "type": "number",
                "description": "the users gender (1=male, 2=female, 3=other)"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "description": "account creation timestamp"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user account authorized groups",
        "x-candos": [
          "~/access-control.writer",
          "identity-management/apps.admin",
          "identity-management/global.admin"
        ],
        "x-record-type": "tenant_user_access",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/access-control.writer\n- identity-management/apps.admin\n- identity-management/global.admin\n---\nController: `Api::V1::AccessControl::Tenant::UsersController`\n\n",
        "tags": [
          "Access Control"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "tenant_user_access_overview",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "access_group_ids": {
            "type": "array",
            "description": "id of an access group",
            "items": {
              "type": "string"
            }
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "registered email address"
          },
          "first_name": {
            "type": "string",
            "description": "the users first name"
          },
          "last_name": {
            "type": "string",
            "description": "the users last name"
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "description": "the users title"
              },
              {
                "type": "null"
              }
            ]
          },
          "gender": {
            "anyOf": [
              {
                "type": "number",
                "description": "the users gender (1=male, 2=female, 3=other)"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "description": "account creation timestamp"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/{app}/content_acceptance/{name}": {
      "post": {
        "summary": "Create Content",
        "x-record-type": "content_acceptance",
        "x-candos": "content_acceptance",
        "description": "Controller: `Api::V1::App::ContentAcceptanceController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content app"
          },
          {
            "name": "name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content name"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actors_app_id": {
                      "type": "string",
                      "description": "id of the app this content belongs to"
                    },
                    "name": {
                      "type": "string",
                      "default": "app-name",
                      "description": "name of the content (like \"tos\", \"app-info\")"
                    },
                    "version": {
                      "type": "number",
                      "description": "highest active-flagged version will be used"
                    },
                    "content_translations": {
                      "type": "object",
                      "description": "Hash of locale-languages with translated content",
                      "properties": {
                        "de": {
                          "type": "string",
                          "default": "Deutsche Übersetzung",
                          "description": "German content"
                        },
                        "en": {
                          "type": "string",
                          "default": "English translation",
                          "description": "English content"
                        }
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "default": false,
                      "description": "only active flagged will be used, leave inactive during draft"
                    },
                    "acceptance_required": {
                      "type": "boolean",
                      "default": false,
                      "description": "when true the user is required to accept every new version of this content"
                    },
                    "acceptance_given": {
                      "type": "boolean",
                      "default": false,
                      "description": "if required indicates if it was yet given by the current user"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "content",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actors_app_id": {
            "type": "string",
            "description": "id of the app this content belongs to"
          },
          "name": {
            "type": "string",
            "default": "app-name",
            "description": "name of the content (like \"tos\", \"app-info\")"
          },
          "version": {
            "type": "number",
            "description": "highest active-flagged version will be used"
          },
          "content_translations": {
            "type": "object",
            "description": "Hash of locale-languages with translated content",
            "properties": {
              "de": {
                "type": "string",
                "default": "Deutsche Übersetzung",
                "description": "German content"
              },
              "en": {
                "type": "string",
                "default": "English translation",
                "description": "English content"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": false,
            "description": "only active flagged will be used, leave inactive during draft"
          },
          "acceptance_required": {
            "type": "boolean",
            "default": false,
            "description": "when true the user is required to accept every new version of this content"
          },
          "acceptance_given": {
            "type": "boolean",
            "default": false,
            "description": "if required indicates if it was yet given by the current user"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "get": {
        "summary": "Show Content",
        "x-candos": [
          "public"
        ],
        "x-record-type": "content_acceptance",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- public\n---\nController: `Api::V1::App::ContentAcceptanceController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content app"
          },
          {
            "name": "name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content name"
          }
        ],
        "responses": {
          "200": {
            "description": "Content view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "content",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actors_app_id": {
            "type": "string",
            "description": "id of the app this content belongs to"
          },
          "name": {
            "type": "string",
            "default": "app-name",
            "description": "name of the content (like \"tos\", \"app-info\")"
          },
          "version": {
            "type": "number",
            "description": "highest active-flagged version will be used"
          },
          "content_translations": {
            "type": "object",
            "description": "Hash of locale-languages with translated content",
            "properties": {
              "de": {
                "type": "string",
                "default": "Deutsche Übersetzung",
                "description": "German content"
              },
              "en": {
                "type": "string",
                "default": "English translation",
                "description": "English content"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": false,
            "description": "only active flagged will be used, leave inactive during draft"
          },
          "acceptance_required": {
            "type": "boolean",
            "default": false,
            "description": "when true the user is required to accept every new version of this content"
          },
          "acceptance_given": {
            "type": "boolean",
            "default": false,
            "description": "if required indicates if it was yet given by the current user"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update Content",
        "x-candos": [
          "public"
        ],
        "x-record-type": "content_acceptance",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- public\n---\nController: `Api::V1::App::ContentAcceptanceController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content app"
          },
          {
            "name": "name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content name"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actors_app_id": {
                      "type": "string",
                      "description": "id of the app this content belongs to"
                    },
                    "name": {
                      "type": "string",
                      "default": "app-name",
                      "description": "name of the content (like \"tos\", \"app-info\")"
                    },
                    "version": {
                      "type": "number",
                      "description": "highest active-flagged version will be used"
                    },
                    "content_translations": {
                      "type": "object",
                      "description": "Hash of locale-languages with translated content",
                      "properties": {
                        "de": {
                          "type": "string",
                          "default": "Deutsche Übersetzung",
                          "description": "German content"
                        },
                        "en": {
                          "type": "string",
                          "default": "English translation",
                          "description": "English content"
                        }
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "default": false,
                      "description": "only active flagged will be used, leave inactive during draft"
                    },
                    "acceptance_required": {
                      "type": "boolean",
                      "default": false,
                      "description": "when true the user is required to accept every new version of this content"
                    },
                    "acceptance_given": {
                      "type": "boolean",
                      "default": false,
                      "description": "if required indicates if it was yet given by the current user"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "content",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actors_app_id": {
            "type": "string",
            "description": "id of the app this content belongs to"
          },
          "name": {
            "type": "string",
            "default": "app-name",
            "description": "name of the content (like \"tos\", \"app-info\")"
          },
          "version": {
            "type": "number",
            "description": "highest active-flagged version will be used"
          },
          "content_translations": {
            "type": "object",
            "description": "Hash of locale-languages with translated content",
            "properties": {
              "de": {
                "type": "string",
                "default": "Deutsche Übersetzung",
                "description": "German content"
              },
              "en": {
                "type": "string",
                "default": "English translation",
                "description": "English content"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": false,
            "description": "only active flagged will be used, leave inactive during draft"
          },
          "acceptance_required": {
            "type": "boolean",
            "default": false,
            "description": "when true the user is required to accept every new version of this content"
          },
          "acceptance_given": {
            "type": "boolean",
            "default": false,
            "description": "if required indicates if it was yet given by the current user"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/{app}/oauth/token": {
      "post": {
        "summary": "Login user with email",
        "tags": [
          "Access Tokens"
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "x-example": "identity-management",
            "description": "The app to login for.",
            "required": true
          },
          {
            "name": "grant_type",
            "in": "formData",
            "type": "string",
            "x-example": "password",
            "enum": [
              "password",
              "refresh_token",
              "google"
            ],
            "description": "Grant Type"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string",
            "x-example": "email@domain.local",
            "description": "Email"
          },
          {
            "name": "password",
            "in": "formData",
            "type": "string",
            "x-example": "##################",
            "description": "Password"
          },
          {
            "name": "invite_token",
            "in": "formData",
            "type": "string",
            "description": "Optional token for invites. Will be processed at login and passed through to frontend."
          },
          {
            "name": "refresh_token",
            "in": "formData",
            "type": "string",
            "description": "Refresh Token to be sent with grant_type \"refresh_token\" instead of email and password"
          }
        ],
        "responses": {
          "200": {
            "description": "User Logged in",
            "schema": {
              "type": "object",
              "properties": "#<RSpec::Core::Example \"returns a 200 response\">"
            }
          }
        }
      }
    },
    "/api/v1/oauth/revoke": {
      "post": {
        "summary": "Logout / invalidate the given token",
        "tags": [
          "Access Tokens"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "formData",
            "type": "string",
            "description": "Token to be revoked (optional - falls back to current Bearer token in HTTP header)"
          }
        ],
        "responses": {
          "200": {
            "description": "Token revoked",
            "schema": {
              "type": "object",
              "properties": {
                "meta": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "object",
                      "properties": {
                        "success": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/app/info/{name}": {
      "get": {
        "summary": "Loads app info identified by name",
        "x-record-type": "app_info",
        "x-candos": "app_info",
        "description": "Controller: `Api::V1::App::InfosController`\n\n",
        "tags": [
          "App Info"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "App name"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::App view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "default": "app-name",
            "description": "unique name of the app"
          },
          "short_name": {
            "type": "string",
            "default": "app-name",
            "description": "short name of the app"
          },
          "full_name": {
            "type": "string",
            "default": "app-name",
            "description": "full name of the app"
          },
          "auth_provider_hints": {
            "type": "array",
            "description": "MD5 checksums for domains with custom oauth provider",
            "items": {
              "type": "string"
            }
          },
          "config": {
            "type": "object",
            "description": "Hash of app config",
            "properties": {
              "url": {
                "type": "string",
                "default": "https://domain.local",
                "description": "URL of the app"
              },
              "uses_bearer_token": {
                "type": "boolean",
                "default": true,
                "description": "If the app bearer token will be included in redirect URL as #anchor (true) or query param for server (false)"
              },
              "locales": {
                "type": "array",
                "default": [
                  "de",
                  "en"
                ],
                "items": {
                  "type": "string",
                  "description": "locale string"
                }
              },
              "default_locale": {
                "type": "string",
                "default": "en",
                "description": "Which of the locales is the default"
              },
              "mailer": {
                "type": "object",
                "description": "mail config",
                "properties": {
                  "from": {
                    "type": "string",
                    "description": "The from address used in mails for user email confirmations"
                  },
                  "reply_to": {
                    "type": "string",
                    "description": "The reply address used in mails for user email confirmations"
                  },
                  "support_email": {
                    "type": "string",
                    "description": "The support address used in mails for user email confirmations"
                  }
                }
              },
              "theme": {
                "type": "object",
                "description": "optional theme settings",
                "properties": {
                  "primary": {
                    "type": "object",
                    "description": "primary colors",
                    "properties": {
                      "main": {
                        "type": "string",
                        "description": "primary color"
                      },
                      "light": {
                        "type": "string",
                        "description": "lighter variant of the primary color"
                      },
                      "dark": {
                        "type": "string",
                        "description": "darker variant of the primary color"
                      }
                    }
                  },
                  "secondary": {
                    "type": "object",
                    "description": "secondary colors",
                    "properties": {
                      "main": {
                        "type": "string",
                        "description": "secondary color"
                      },
                      "light": {
                        "type": "string",
                        "description": "lighter variant of the secondary color"
                      },
                      "dark": {
                        "type": "string",
                        "description": "darker variant of the secondary color"
                      }
                    }
                  },
                  "background": {
                    "type": "object",
                    "description": "secondary colors",
                    "properties": {
                      "default": {
                        "type": "string",
                        "description": "background color"
                      }
                    }
                  },
                  "components_care": {
                    "type": "object",
                    "description": "components care specific settings",
                    "properties": {
                      "ui_kit": {
                        "type": "object",
                        "description": "theme settings for ui_kit",
                        "properties": {
                          "action_button": {
                            "type": "object",
                            "description": "theme settings for ActionButton",
                            "properties": {
                              "background_color": {
                                "type": "string",
                                "description": "background color"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "default": "light",
                    "description": "light or dark theme as base"
                  }
                }
              }
            }
          },
          "contents": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "id of the content"
                },
                "name": {
                  "type": "string",
                  "description": "name of the content (e.g. tos)"
                },
                "url": {
                  "type": "string",
                  "description": "url to load the content"
                },
                "version": {
                  "type": "string",
                  "description": "the version (latest) of the content"
                }
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/{app}/{tenant_id}/invitations": {
      "post": {
        "summary": "Create Invite",
        "x-candos": [
          "~/access-control.writer",
          "~/tenant.admin",
          "~/app-tenant.admin"
        ],
        "x-record-type": "invitation",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/access-control.writer\n- ~/tenant.admin\n- ~/app-tenant.admin\n---\nController: `Api::V1::App::Tenant::InvitationsController`\n\n",
        "tags": [
          "Invite"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Invite app"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Invite tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Invite id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "e-mail of the user to invite"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Optionally the user id instead of email user to invite"
                    },
                    "invitable_type": {
                      "type": "string",
                      "default": "tenant",
                      "description": "the object class this invitation refers to"
                    },
                    "invitable_id": {
                      "type": "string",
                      "description": "the id of the object this invitation refers to"
                    },
                    "actions": {
                      "type": "object",
                      "description": "JSON Hash with key value pairs of one or more actions (key) to run on accept with arguments (value)",
                      "properties": {
                        "access_group_ids": {
                          "type": "array",
                          "description": "ids to the groups below a tenant organization to authorize the user acception invites (removes all previous)"
                        },
                        "access_groups": {
                          "type": "array",
                          "description": "name identifiers in the form of `ou-name/group-name` to the groups below a tenant organization to authorize the user acception invites (removes all previous)"
                        },
                        "add_access_group_ids": {
                          "type": "array",
                          "description": "ids to the groups below a tenant organization to authorize the user acception invites (adds to those the user already has)"
                        },
                        "add_access_groups": {
                          "type": "array",
                          "description": "name identifiers in the form of `ou-name/group-name` to the groups below a tenant organization to authorize the user acception invites (adds to those the user already has)"
                        }
                      }
                    },
                    "app": {
                      "type": "string",
                      "description": "the app context"
                    },
                    "token": {
                      "type": "string",
                      "description": "a unique token id that the server generates"
                    },
                    "tenant_id": {
                      "type": "string",
                      "description": "the used as tenant context"
                    },
                    "auto_accept": {
                      "type": "boolean",
                      "default": true,
                      "description": "automatically performs the invitation as soon as the user is logging in"
                    },
                    "url": {
                      "type": "string",
                      "description": "the URL to be used to log in to accept the invitation"
                    },
                    "redirect_url": {
                      "type": "string",
                      "description": "after the invitation was accepted the user will be redirect to this url"
                    },
                    "accepted_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "timestamp if/when the invitation was accepted"
                    },
                    "done": {
                      "type": "boolean",
                      "default": false,
                      "description": "indicating if this invitation is outstanding"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "timestamp when the invitation was created"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "timestamp when the invitation was updated"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invite created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "invitation",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "email": {
            "type": "string",
            "description": "e-mail of the user to invite"
          },
          "user_id": {
            "type": "string",
            "description": "Optionally the user id instead of email user to invite"
          },
          "invitable_type": {
            "type": "string",
            "default": "tenant",
            "description": "the object class this invitation refers to"
          },
          "invitable_id": {
            "type": "string",
            "description": "the id of the object this invitation refers to"
          },
          "actions": {
            "type": "object",
            "description": "JSON Hash with key value pairs of one or more actions (key) to run on accept with arguments (value)",
            "properties": {
              "access_group_ids": {
                "type": "array",
                "description": "ids to the groups below a tenant organization to authorize the user acception invites (removes all previous)"
              },
              "access_groups": {
                "type": "array",
                "description": "name identifiers in the form of `ou-name/group-name` to the groups below a tenant organization to authorize the user acception invites (removes all previous)"
              },
              "add_access_group_ids": {
                "type": "array",
                "description": "ids to the groups below a tenant organization to authorize the user acception invites (adds to those the user already has)"
              },
              "add_access_groups": {
                "type": "array",
                "description": "name identifiers in the form of `ou-name/group-name` to the groups below a tenant organization to authorize the user acception invites (adds to those the user already has)"
              }
            }
          },
          "app": {
            "type": "string",
            "description": "the app context"
          },
          "token": {
            "type": "string",
            "description": "a unique token id that the server generates"
          },
          "tenant_id": {
            "type": "string",
            "description": "the used as tenant context"
          },
          "auto_accept": {
            "type": "boolean",
            "default": true,
            "description": "automatically performs the invitation as soon as the user is logging in"
          },
          "url": {
            "type": "string",
            "description": "the URL to be used to log in to accept the invitation"
          },
          "redirect_url": {
            "type": "string",
            "description": "after the invitation was accepted the user will be redirect to this url"
          },
          "accepted_at": {
            "type": "string",
            "format": "date-time",
            "description": "timestamp if/when the invitation was accepted"
          },
          "done": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this invitation is outstanding"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "timestamp when the invitation was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "timestamp when the invitation was updated"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "access_groups": {
        "type": "array",
        "description": "meta information to visualize the access a user has",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "label": {
              "type": "string",
              "description": "the label of this access group"
            },
            "group": {
              "type": "string",
              "description": "a grouping name"
            },
            "description": {
              "type": "string",
              "description": "describes the access this group grants"
            }
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/{app}/{tenant_id}/invitations/{id}": {
      "delete": {
        "summary": "Delete Invite",
        "x-candos": [
          "~/access-control.writer",
          "~/tenant.admin",
          "~/app-tenant.admin"
        ],
        "x-record-type": "invitation",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/access-control.writer\n- ~/tenant.admin\n- ~/app-tenant.admin\n---\nController: `Api::V1::App::Tenant::InvitationsController`\n\n",
        "tags": [
          "Invite"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Invite app"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Invite tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Invite id"
          }
        ],
        "responses": {
          "200": {
            "description": "Invite deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "invitation",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "email": {
            "type": "string",
            "description": "e-mail of the user to invite"
          },
          "user_id": {
            "type": "string",
            "description": "Optionally the user id instead of email user to invite"
          },
          "invitable_type": {
            "type": "string",
            "default": "tenant",
            "description": "the object class this invitation refers to"
          },
          "invitable_id": {
            "type": "string",
            "description": "the id of the object this invitation refers to"
          },
          "actions": {
            "type": "object",
            "description": "JSON Hash with key value pairs of one or more actions (key) to run on accept with arguments (value)",
            "properties": {
              "access_group_ids": {
                "type": "array",
                "description": "ids to the groups below a tenant organization to authorize the user acception invites (removes all previous)"
              },
              "access_groups": {
                "type": "array",
                "description": "name identifiers in the form of `ou-name/group-name` to the groups below a tenant organization to authorize the user acception invites (removes all previous)"
              },
              "add_access_group_ids": {
                "type": "array",
                "description": "ids to the groups below a tenant organization to authorize the user acception invites (adds to those the user already has)"
              },
              "add_access_groups": {
                "type": "array",
                "description": "name identifiers in the form of `ou-name/group-name` to the groups below a tenant organization to authorize the user acception invites (adds to those the user already has)"
              }
            }
          },
          "app": {
            "type": "string",
            "description": "the app context"
          },
          "token": {
            "type": "string",
            "description": "a unique token id that the server generates"
          },
          "tenant_id": {
            "type": "string",
            "description": "the used as tenant context"
          },
          "auto_accept": {
            "type": "boolean",
            "default": true,
            "description": "automatically performs the invitation as soon as the user is logging in"
          },
          "url": {
            "type": "string",
            "description": "the URL to be used to log in to accept the invitation"
          },
          "redirect_url": {
            "type": "string",
            "description": "after the invitation was accepted the user will be redirect to this url"
          },
          "accepted_at": {
            "type": "string",
            "format": "date-time",
            "description": "timestamp if/when the invitation was accepted"
          },
          "done": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this invitation is outstanding"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "timestamp when the invitation was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "timestamp when the invitation was updated"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "access_groups": {
        "type": "array",
        "description": "meta information to visualize the access a user has",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "label": {
              "type": "string",
              "description": "the label of this access group"
            },
            "group": {
              "type": "string",
              "description": "a grouping name"
            },
            "description": {
              "type": "string",
              "description": "describes the access this group grants"
            }
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/{app}/user": {
      "get": {
        "summary": "Show user account",
        "x-record-type": "user",
        "x-candos": "user",
        "description": "Controller: `Api::V1::App::UserController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app"
          }
        ],
        "x-gridfilter-fields": [
          "id",
          "actor_id",
          "locale",
          "email",
          "gender",
          "title",
          "first_name",
          "last_name",
          "created_at"
        ],
        "responses": {
          "200": {
            "description": "User view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_user",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id (of mapping)"
            },
            "actor_id": {
              "type": "string",
              "description": "unique id of the users account"
            },
            "email": {
              "type": "string",
              "description": "the new e-mail address"
            },
            "first_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "last_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "short": {
              "type": "string",
              "description": "User short sign"
            },
            "title": {
              "type": "string",
              "description": "User title"
            },
            "gender": {
              "type": "number",
              "enum": [
                0,
                1,
                2
              ],
              "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
            },
            "mobile": {
              "type": "string",
              "description": "mobile number"
            },
            "locale": {
              "type": "string",
              "description": "language code"
            },
            "current_password": {
              "type": "string",
              "description": "the current password"
            },
            "password": {
              "type": "string",
              "description": "the new password"
            },
            "password_confirmation": {
              "type": "string",
              "description": "the new password (confirmation)"
            },
            "image_b64": {
              "type": "string",
              "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
            },
            "image": {
              "type": "object",
              "description": "image in different sizes",
              "properties": {
                "large": {
                  "type": "string"
                },
                "medium": {
                  "type": "string"
                },
                "small": {
                  "type": "string"
                }
              }
            },
            "role_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the role id assigned to the user"
              }
            },
            "tenants": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "candos": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "recent_invite_tokens": {
              "type": "array",
              "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
              "items": {
                "type": "string"
              }
            },
            "otp_enabled": {
              "type": "boolean",
              "description": "if true the login needs to present an input for sending an OTP with the login"
            },
            "otp_provided": {
              "type": "boolean",
              "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
            },
            "otp_provisioning_qr_code": {
              "type": "string",
              "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
            },
            "otp_secret_key": {
              "type": "string",
              "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
            },
            "otp_backup_codes": {
              "type": "array",
              "description": "only after enabling OTP/MFA this will once show backup codes",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update user account",
        "x-record-type": "user",
        "x-candos": "user",
        "description": "Controller: `Api::V1::App::UserController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "last_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "image": {
                      "type": "object",
                      "description": "image in different sizes",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    },
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "gender": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
                    },
                    "email": {
                      "type": "string",
                      "description": "the new e-mail address"
                    },
                    "mobile": {
                      "type": "string",
                      "description": "mobile number"
                    },
                    "title": {
                      "type": "string",
                      "description": "User title"
                    },
                    "short": {
                      "type": "string",
                      "description": "User short sign"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user account",
        "x-record-type": "user",
        "x-candos": "user",
        "description": "Controller: `Api::V1::App::UserController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/app_admin": {
      "get": {
        "summary": "Show App",
        "x-candos": [
          "identity-management/apps.reader"
        ],
        "x-record-type": "app_admin",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/apps.reader\n---\nController: `Api::V1::AppAdminController`\n\n",
        "tags": [
          "Apps"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actors::App view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_admin",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "name": {
              "type": "string",
              "default": "app-name",
              "description": "unique name of the app"
            },
            "short_name": {
              "type": "string",
              "default": "app-name",
              "description": "short name of the app"
            },
            "full_name": {
              "type": "string",
              "default": "app-name",
              "description": "full name of the app"
            },
            "languages": {
              "type": "array",
              "default": [
                "de",
                "en"
              ],
              "description": "language codes of configured locales",
              "items": {
                "type": "string",
                "description": "language code"
              }
            },
            "available_languages": {
              "type": "array",
              "default": [
                "en",
                "de",
                "fr",
                "ru",
                "nl"
              ],
              "description": "language codes of supported locales",
              "items": {
                "type": "string",
                "description": "language code"
              }
            }
          }
        }
      }
    },
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_admin",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "default": "app-name",
            "description": "unique name of the app"
          },
          "short_name": {
            "type": "string",
            "default": "app-name",
            "description": "short name of the app"
          },
          "full_name": {
            "type": "string",
            "default": "app-name",
            "description": "full name of the app"
          },
          "languages": {
            "type": "array",
            "default": [
              "de",
              "en"
            ],
            "description": "language codes of configured locales",
            "items": {
              "type": "string",
              "description": "language code"
            }
          },
          "available_languages": {
            "type": "array",
            "default": [
              "en",
              "de",
              "fr",
              "ru",
              "nl"
            ],
            "description": "language codes of supported locales",
            "items": {
              "type": "string",
              "description": "language code"
            }
          },
          "import_candos": {
            "type": "string",
            "description": "yaml data with array of all candos the app has"
          },
          "import_roles": {
            "type": "string",
            "description": "yaml data with array of all roles the app has and assigned candos"
          },
          "locale_import_candos": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locales for this apps functionalities as yaml string"
              },
              "de": {
                "type": "string",
                "description": "the german locales for this apps functionalities as yaml string"
              }
            }
          },
          "locale_import_roles": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locales for this apps roles as yaml string"
              },
              "de": {
                "type": "string",
                "description": "the german locales for this apps roles as yaml string"
              }
            }
          },
          "config": {
            "type": "object",
            "description": "Hash of app config",
            "properties": {
              "url": {
                "type": "string",
                "default": "https://domain.local",
                "description": "URL of the app"
              },
              "uses_bearer_token": {
                "type": "boolean",
                "default": true,
                "description": "If the app bearer token will be included in redirect URL as #anchor (true) or query param for server (false)"
              },
              "locales": {
                "type": "array",
                "default": [
                  "de",
                  "en"
                ],
                "items": {
                  "type": "string",
                  "description": "locale string"
                }
              },
              "default_locale": {
                "type": "string",
                "default": "en",
                "description": "Which of the locales is the default"
              },
              "mailer": {
                "type": "object",
                "description": "mail config",
                "properties": {
                  "from": {
                    "type": "string",
                    "description": "The from address used in mails for user email confirmations"
                  },
                  "reply_to": {
                    "type": "string",
                    "description": "The reply address used in mails for user email confirmations"
                  },
                  "support_email": {
                    "type": "string",
                    "description": "The support address used in mails for user email confirmations"
                  },
                  "logo_b64": {
                    "type": "string",
                    "description": "A PNG logo as mail header in Base64 encoded format"
                  },
                  "footer_html": {
                    "type": "string",
                    "description": "The footer_html of the current client locale"
                  },
                  "footer_html_translations": {
                    "type": "object",
                    "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                    "properties": {
                      "en": {
                        "type": "string",
                        "description": "the english locale footer"
                      },
                      "de": {
                        "type": "string",
                        "description": "the german locale footer"
                      }
                    }
                  },
                  "smtp_settings": {
                    "type": "object",
                    "description": "smtp settings",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Address of SMTP server"
                      },
                      "port": {
                        "type": "number",
                        "description": "Port of SMTP server"
                      },
                      "domain": {
                        "type": "string",
                        "description": "HELO domain"
                      },
                      "user_name": {
                        "type": "string",
                        "description": "SMTP username"
                      },
                      "password": {
                        "type": "string",
                        "description": "SMTP password"
                      },
                      "authentication": {
                        "type": "string",
                        "description": "AuthenticationMode: plain, login or cram_md5"
                      },
                      "enable_starttls": {
                        "type": "boolean",
                        "description": "Use STARTTLS when connecting to your SMTP server and fail if unsupported"
                      },
                      "enable_starttls_auto": {
                        "type": "boolean",
                        "description": "Detects if STARTTLS is enabled in your SMTP server and starts to use it"
                      },
                      "openssl_verify_mode": {
                        "type": "string",
                        "description": "When using TLS, you can set how OpenSSL checks the certificate. This is really useful if you need to validate a self-signed and/or a wildcard certificate. You can use the name of an OpenSSL verify constant ('none' or 'peer')"
                      },
                      "ssl": {
                        "type": "string",
                        "description": "Enables the SMTP connection to use SMTP/TLS (SMTPS: SMTP over direct TLS connection)"
                      },
                      "open_timeout": {
                        "type": "number",
                        "description": "Number of seconds to wait while attempting to open a connection."
                      },
                      "read_timeout": {
                        "type": "number",
                        "description": "Number of seconds to wait until timing-out a read(2) call."
                      }
                    }
                  }
                }
              },
              "theme": {
                "type": "object",
                "description": "optional theme settings",
                "properties": {
                  "primary": {
                    "type": "object",
                    "description": "primary colors",
                    "properties": {
                      "main": {
                        "type": "string",
                        "description": "primary color"
                      },
                      "light": {
                        "type": "string",
                        "description": "lighter variant of the primary color"
                      },
                      "dark": {
                        "type": "string",
                        "description": "darker variant of the primary color"
                      }
                    }
                  },
                  "secondary": {
                    "type": "object",
                    "description": "secondary colors",
                    "properties": {
                      "main": {
                        "type": "string",
                        "description": "secondary color"
                      },
                      "light": {
                        "type": "string",
                        "description": "lighter variant of the secondary color"
                      },
                      "dark": {
                        "type": "string",
                        "description": "darker variant of the secondary color"
                      }
                    }
                  },
                  "background": {
                    "type": "object",
                    "description": "secondary colors",
                    "properties": {
                      "default": {
                        "type": "string",
                        "description": "background color"
                      }
                    }
                  },
                  "components_care": {
                    "type": "object",
                    "description": "components care specific settings",
                    "properties": {
                      "ui_kit": {
                        "type": "object",
                        "description": "theme settings for ui_kit",
                        "properties": {
                          "action_button": {
                            "type": "object",
                            "description": "theme settings for ActionButton",
                            "properties": {
                              "background_color": {
                                "type": "string",
                                "description": "background color"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "default": "light",
                    "description": "light or dark theme as base"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create App",
        "x-candos": [
          "identity-management/apps.writer"
        ],
        "x-record-type": "app_admin",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/apps.writer\n---\nController: `Api::V1::AppAdminController`\n\n",
        "tags": [
          "Apps"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "short_name": {
                      "type": "string",
                      "default": "app-name",
                      "description": "short name of the app"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "app-name",
                      "description": "full name of the app"
                    },
                    "config": {
                      "type": "object",
                      "description": "Hash of app config",
                      "properties": {
                        "url": {
                          "type": "string",
                          "default": "https://domain.local",
                          "description": "URL of the app"
                        },
                        "uses_bearer_token": {
                          "type": "boolean",
                          "default": true,
                          "description": "If the app bearer token will be included in redirect URL as #anchor (true) or query param for server (false)"
                        },
                        "locales": {
                          "type": "array",
                          "default": [
                            "de",
                            "en"
                          ],
                          "items": {
                            "type": "string",
                            "description": "locale string"
                          }
                        },
                        "default_locale": {
                          "type": "string",
                          "default": "en",
                          "description": "Which of the locales is the default"
                        },
                        "mailer": {
                          "type": "object",
                          "description": "mail config",
                          "properties": {
                            "from": {
                              "type": "string",
                              "description": "The from address used in mails for user email confirmations"
                            },
                            "reply_to": {
                              "type": "string",
                              "description": "The reply address used in mails for user email confirmations"
                            },
                            "support_email": {
                              "type": "string",
                              "description": "The support address used in mails for user email confirmations"
                            },
                            "logo_b64": {
                              "type": "string",
                              "description": "A PNG logo as mail header in Base64 encoded format"
                            },
                            "footer_html": {
                              "type": "string",
                              "description": "The footer_html of the current client locale"
                            },
                            "footer_html_translations": {
                              "type": "object",
                              "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                              "properties": {
                                "en": {
                                  "type": "string",
                                  "description": "the english locale footer"
                                },
                                "de": {
                                  "type": "string",
                                  "description": "the german locale footer"
                                }
                              }
                            },
                            "smtp_settings": {
                              "type": "object",
                              "description": "smtp settings",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "description": "Address of SMTP server"
                                },
                                "port": {
                                  "type": "number",
                                  "description": "Port of SMTP server"
                                },
                                "domain": {
                                  "type": "string",
                                  "description": "HELO domain"
                                },
                                "user_name": {
                                  "type": "string",
                                  "description": "SMTP username"
                                },
                                "password": {
                                  "type": "string",
                                  "description": "SMTP password"
                                },
                                "authentication": {
                                  "type": "string",
                                  "description": "AuthenticationMode: plain, login or cram_md5"
                                },
                                "enable_starttls": {
                                  "type": "boolean",
                                  "description": "Use STARTTLS when connecting to your SMTP server and fail if unsupported"
                                },
                                "enable_starttls_auto": {
                                  "type": "boolean",
                                  "description": "Detects if STARTTLS is enabled in your SMTP server and starts to use it"
                                },
                                "openssl_verify_mode": {
                                  "type": "string",
                                  "description": "When using TLS, you can set how OpenSSL checks the certificate. This is really useful if you need to validate a self-signed and/or a wildcard certificate. You can use the name of an OpenSSL verify constant ('none' or 'peer')"
                                },
                                "ssl": {
                                  "type": "string",
                                  "description": "Enables the SMTP connection to use SMTP/TLS (SMTPS: SMTP over direct TLS connection)"
                                },
                                "open_timeout": {
                                  "type": "number",
                                  "description": "Number of seconds to wait while attempting to open a connection."
                                },
                                "read_timeout": {
                                  "type": "number",
                                  "description": "Number of seconds to wait until timing-out a read(2) call."
                                }
                              }
                            }
                          }
                        },
                        "theme": {
                          "type": "object",
                          "description": "optional theme settings",
                          "properties": {
                            "primary": {
                              "type": "object",
                              "description": "primary colors",
                              "properties": {
                                "main": {
                                  "type": "string",
                                  "description": "primary color"
                                },
                                "light": {
                                  "type": "string",
                                  "description": "lighter variant of the primary color"
                                },
                                "dark": {
                                  "type": "string",
                                  "description": "darker variant of the primary color"
                                }
                              }
                            },
                            "secondary": {
                              "type": "object",
                              "description": "secondary colors",
                              "properties": {
                                "main": {
                                  "type": "string",
                                  "description": "secondary color"
                                },
                                "light": {
                                  "type": "string",
                                  "description": "lighter variant of the secondary color"
                                },
                                "dark": {
                                  "type": "string",
                                  "description": "darker variant of the secondary color"
                                }
                              }
                            },
                            "background": {
                              "type": "object",
                              "description": "secondary colors",
                              "properties": {
                                "default": {
                                  "type": "string",
                                  "description": "background color"
                                }
                              }
                            },
                            "components_care": {
                              "type": "object",
                              "description": "components care specific settings",
                              "properties": {
                                "ui_kit": {
                                  "type": "object",
                                  "description": "theme settings for ui_kit",
                                  "properties": {
                                    "action_button": {
                                      "type": "object",
                                      "description": "theme settings for ActionButton",
                                      "properties": {
                                        "background_color": {
                                          "type": "string",
                                          "description": "background color"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "default": "light",
                              "description": "light or dark theme as base"
                            }
                          }
                        }
                      }
                    },
                    "import_roles": {
                      "type": "string",
                      "description": "yaml data with array of all roles the app has and assigned candos"
                    },
                    "import_candos": {
                      "type": "string",
                      "description": "yaml data with array of all candos the app has"
                    },
                    "locale_import_roles": {
                      "type": "object",
                      "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locales for this apps roles as yaml string"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locales for this apps roles as yaml string"
                        }
                      }
                    },
                    "locale_import_candos": {
                      "type": "object",
                      "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locales for this apps functionalities as yaml string"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locales for this apps functionalities as yaml string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::App created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_admin",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "default": "app-name",
            "description": "unique name of the app"
          },
          "short_name": {
            "type": "string",
            "default": "app-name",
            "description": "short name of the app"
          },
          "full_name": {
            "type": "string",
            "default": "app-name",
            "description": "full name of the app"
          },
          "languages": {
            "type": "array",
            "default": [
              "de",
              "en"
            ],
            "description": "language codes of configured locales",
            "items": {
              "type": "string",
              "description": "language code"
            }
          },
          "available_languages": {
            "type": "array",
            "default": [
              "en",
              "de",
              "fr",
              "ru",
              "nl"
            ],
            "description": "language codes of supported locales",
            "items": {
              "type": "string",
              "description": "language code"
            }
          },
          "import_candos": {
            "type": "string",
            "description": "yaml data with array of all candos the app has"
          },
          "import_roles": {
            "type": "string",
            "description": "yaml data with array of all roles the app has and assigned candos"
          },
          "locale_import_candos": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locales for this apps functionalities as yaml string"
              },
              "de": {
                "type": "string",
                "description": "the german locales for this apps functionalities as yaml string"
              }
            }
          },
          "locale_import_roles": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locales for this apps roles as yaml string"
              },
              "de": {
                "type": "string",
                "description": "the german locales for this apps roles as yaml string"
              }
            }
          },
          "config": {
            "type": "object",
            "description": "Hash of app config",
            "properties": {
              "url": {
                "type": "string",
                "default": "https://domain.local",
                "description": "URL of the app"
              },
              "uses_bearer_token": {
                "type": "boolean",
                "default": true,
                "description": "If the app bearer token will be included in redirect URL as #anchor (true) or query param for server (false)"
              },
              "locales": {
                "type": "array",
                "default": [
                  "de",
                  "en"
                ],
                "items": {
                  "type": "string",
                  "description": "locale string"
                }
              },
              "default_locale": {
                "type": "string",
                "default": "en",
                "description": "Which of the locales is the default"
              },
              "mailer": {
                "type": "object",
                "description": "mail config",
                "properties": {
                  "from": {
                    "type": "string",
                    "description": "The from address used in mails for user email confirmations"
                  },
                  "reply_to": {
                    "type": "string",
                    "description": "The reply address used in mails for user email confirmations"
                  },
                  "support_email": {
                    "type": "string",
                    "description": "The support address used in mails for user email confirmations"
                  },
                  "logo_b64": {
                    "type": "string",
                    "description": "A PNG logo as mail header in Base64 encoded format"
                  },
                  "footer_html": {
                    "type": "string",
                    "description": "The footer_html of the current client locale"
                  },
                  "footer_html_translations": {
                    "type": "object",
                    "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                    "properties": {
                      "en": {
                        "type": "string",
                        "description": "the english locale footer"
                      },
                      "de": {
                        "type": "string",
                        "description": "the german locale footer"
                      }
                    }
                  },
                  "smtp_settings": {
                    "type": "object",
                    "description": "smtp settings",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Address of SMTP server"
                      },
                      "port": {
                        "type": "number",
                        "description": "Port of SMTP server"
                      },
                      "domain": {
                        "type": "string",
                        "description": "HELO domain"
                      },
                      "user_name": {
                        "type": "string",
                        "description": "SMTP username"
                      },
                      "password": {
                        "type": "string",
                        "description": "SMTP password"
                      },
                      "authentication": {
                        "type": "string",
                        "description": "AuthenticationMode: plain, login or cram_md5"
                      },
                      "enable_starttls": {
                        "type": "boolean",
                        "description": "Use STARTTLS when connecting to your SMTP server and fail if unsupported"
                      },
                      "enable_starttls_auto": {
                        "type": "boolean",
                        "description": "Detects if STARTTLS is enabled in your SMTP server and starts to use it"
                      },
                      "openssl_verify_mode": {
                        "type": "string",
                        "description": "When using TLS, you can set how OpenSSL checks the certificate. This is really useful if you need to validate a self-signed and/or a wildcard certificate. You can use the name of an OpenSSL verify constant ('none' or 'peer')"
                      },
                      "ssl": {
                        "type": "string",
                        "description": "Enables the SMTP connection to use SMTP/TLS (SMTPS: SMTP over direct TLS connection)"
                      },
                      "open_timeout": {
                        "type": "number",
                        "description": "Number of seconds to wait while attempting to open a connection."
                      },
                      "read_timeout": {
                        "type": "number",
                        "description": "Number of seconds to wait until timing-out a read(2) call."
                      }
                    }
                  }
                }
              },
              "theme": {
                "type": "object",
                "description": "optional theme settings",
                "properties": {
                  "primary": {
                    "type": "object",
                    "description": "primary colors",
                    "properties": {
                      "main": {
                        "type": "string",
                        "description": "primary color"
                      },
                      "light": {
                        "type": "string",
                        "description": "lighter variant of the primary color"
                      },
                      "dark": {
                        "type": "string",
                        "description": "darker variant of the primary color"
                      }
                    }
                  },
                  "secondary": {
                    "type": "object",
                    "description": "secondary colors",
                    "properties": {
                      "main": {
                        "type": "string",
                        "description": "secondary color"
                      },
                      "light": {
                        "type": "string",
                        "description": "lighter variant of the secondary color"
                      },
                      "dark": {
                        "type": "string",
                        "description": "darker variant of the secondary color"
                      }
                    }
                  },
                  "background": {
                    "type": "object",
                    "description": "secondary colors",
                    "properties": {
                      "default": {
                        "type": "string",
                        "description": "background color"
                      }
                    }
                  },
                  "components_care": {
                    "type": "object",
                    "description": "components care specific settings",
                    "properties": {
                      "ui_kit": {
                        "type": "object",
                        "description": "theme settings for ui_kit",
                        "properties": {
                          "action_button": {
                            "type": "object",
                            "description": "theme settings for ActionButton",
                            "properties": {
                              "background_color": {
                                "type": "string",
                                "description": "background color"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "default": "light",
                    "description": "light or dark theme as base"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update App",
        "x-candos": [
          "identity-management/apps.writer"
        ],
        "x-record-type": "app_admin",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/apps.writer\n---\nController: `Api::V1::AppAdminController`\n\n",
        "tags": [
          "Apps"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "short_name": {
                      "type": "string",
                      "default": "app-name",
                      "description": "short name of the app"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "app-name",
                      "description": "full name of the app"
                    },
                    "config": {
                      "type": "object",
                      "description": "Hash of app config",
                      "properties": {
                        "url": {
                          "type": "string",
                          "default": "https://domain.local",
                          "description": "URL of the app"
                        },
                        "uses_bearer_token": {
                          "type": "boolean",
                          "default": true,
                          "description": "If the app bearer token will be included in redirect URL as #anchor (true) or query param for server (false)"
                        },
                        "locales": {
                          "type": "array",
                          "default": [
                            "de",
                            "en"
                          ],
                          "items": {
                            "type": "string",
                            "description": "locale string"
                          }
                        },
                        "default_locale": {
                          "type": "string",
                          "default": "en",
                          "description": "Which of the locales is the default"
                        },
                        "mailer": {
                          "type": "object",
                          "description": "mail config",
                          "properties": {
                            "from": {
                              "type": "string",
                              "description": "The from address used in mails for user email confirmations"
                            },
                            "reply_to": {
                              "type": "string",
                              "description": "The reply address used in mails for user email confirmations"
                            },
                            "support_email": {
                              "type": "string",
                              "description": "The support address used in mails for user email confirmations"
                            },
                            "logo_b64": {
                              "type": "string",
                              "description": "A PNG logo as mail header in Base64 encoded format"
                            },
                            "footer_html": {
                              "type": "string",
                              "description": "The footer_html of the current client locale"
                            },
                            "footer_html_translations": {
                              "type": "object",
                              "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                              "properties": {
                                "en": {
                                  "type": "string",
                                  "description": "the english locale footer"
                                },
                                "de": {
                                  "type": "string",
                                  "description": "the german locale footer"
                                }
                              }
                            },
                            "smtp_settings": {
                              "type": "object",
                              "description": "smtp settings",
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "description": "Address of SMTP server"
                                },
                                "port": {
                                  "type": "number",
                                  "description": "Port of SMTP server"
                                },
                                "domain": {
                                  "type": "string",
                                  "description": "HELO domain"
                                },
                                "user_name": {
                                  "type": "string",
                                  "description": "SMTP username"
                                },
                                "password": {
                                  "type": "string",
                                  "description": "SMTP password"
                                },
                                "authentication": {
                                  "type": "string",
                                  "description": "AuthenticationMode: plain, login or cram_md5"
                                },
                                "enable_starttls": {
                                  "type": "boolean",
                                  "description": "Use STARTTLS when connecting to your SMTP server and fail if unsupported"
                                },
                                "enable_starttls_auto": {
                                  "type": "boolean",
                                  "description": "Detects if STARTTLS is enabled in your SMTP server and starts to use it"
                                },
                                "openssl_verify_mode": {
                                  "type": "string",
                                  "description": "When using TLS, you can set how OpenSSL checks the certificate. This is really useful if you need to validate a self-signed and/or a wildcard certificate. You can use the name of an OpenSSL verify constant ('none' or 'peer')"
                                },
                                "ssl": {
                                  "type": "string",
                                  "description": "Enables the SMTP connection to use SMTP/TLS (SMTPS: SMTP over direct TLS connection)"
                                },
                                "open_timeout": {
                                  "type": "number",
                                  "description": "Number of seconds to wait while attempting to open a connection."
                                },
                                "read_timeout": {
                                  "type": "number",
                                  "description": "Number of seconds to wait until timing-out a read(2) call."
                                }
                              }
                            }
                          }
                        },
                        "theme": {
                          "type": "object",
                          "description": "optional theme settings",
                          "properties": {
                            "primary": {
                              "type": "object",
                              "description": "primary colors",
                              "properties": {
                                "main": {
                                  "type": "string",
                                  "description": "primary color"
                                },
                                "light": {
                                  "type": "string",
                                  "description": "lighter variant of the primary color"
                                },
                                "dark": {
                                  "type": "string",
                                  "description": "darker variant of the primary color"
                                }
                              }
                            },
                            "secondary": {
                              "type": "object",
                              "description": "secondary colors",
                              "properties": {
                                "main": {
                                  "type": "string",
                                  "description": "secondary color"
                                },
                                "light": {
                                  "type": "string",
                                  "description": "lighter variant of the secondary color"
                                },
                                "dark": {
                                  "type": "string",
                                  "description": "darker variant of the secondary color"
                                }
                              }
                            },
                            "background": {
                              "type": "object",
                              "description": "secondary colors",
                              "properties": {
                                "default": {
                                  "type": "string",
                                  "description": "background color"
                                }
                              }
                            },
                            "components_care": {
                              "type": "object",
                              "description": "components care specific settings",
                              "properties": {
                                "ui_kit": {
                                  "type": "object",
                                  "description": "theme settings for ui_kit",
                                  "properties": {
                                    "action_button": {
                                      "type": "object",
                                      "description": "theme settings for ActionButton",
                                      "properties": {
                                        "background_color": {
                                          "type": "string",
                                          "description": "background color"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "type": {
                              "type": "string",
                              "default": "light",
                              "description": "light or dark theme as base"
                            }
                          }
                        }
                      }
                    },
                    "import_roles": {
                      "type": "string",
                      "description": "yaml data with array of all roles the app has and assigned candos"
                    },
                    "import_candos": {
                      "type": "string",
                      "description": "yaml data with array of all candos the app has"
                    },
                    "locale_import_roles": {
                      "type": "object",
                      "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locales for this apps roles as yaml string"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locales for this apps roles as yaml string"
                        }
                      }
                    },
                    "locale_import_candos": {
                      "type": "object",
                      "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locales for this apps functionalities as yaml string"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locales for this apps functionalities as yaml string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::App updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_admin",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "default": "app-name",
            "description": "unique name of the app"
          },
          "short_name": {
            "type": "string",
            "default": "app-name",
            "description": "short name of the app"
          },
          "full_name": {
            "type": "string",
            "default": "app-name",
            "description": "full name of the app"
          },
          "languages": {
            "type": "array",
            "default": [
              "de",
              "en"
            ],
            "description": "language codes of configured locales",
            "items": {
              "type": "string",
              "description": "language code"
            }
          },
          "available_languages": {
            "type": "array",
            "default": [
              "en",
              "de",
              "fr",
              "ru",
              "nl"
            ],
            "description": "language codes of supported locales",
            "items": {
              "type": "string",
              "description": "language code"
            }
          },
          "import_candos": {
            "type": "string",
            "description": "yaml data with array of all candos the app has"
          },
          "import_roles": {
            "type": "string",
            "description": "yaml data with array of all roles the app has and assigned candos"
          },
          "locale_import_candos": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locales for this apps functionalities as yaml string"
              },
              "de": {
                "type": "string",
                "description": "the german locales for this apps functionalities as yaml string"
              }
            }
          },
          "locale_import_roles": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locales for this apps roles as yaml string"
              },
              "de": {
                "type": "string",
                "description": "the german locales for this apps roles as yaml string"
              }
            }
          },
          "config": {
            "type": "object",
            "description": "Hash of app config",
            "properties": {
              "url": {
                "type": "string",
                "default": "https://domain.local",
                "description": "URL of the app"
              },
              "uses_bearer_token": {
                "type": "boolean",
                "default": true,
                "description": "If the app bearer token will be included in redirect URL as #anchor (true) or query param for server (false)"
              },
              "locales": {
                "type": "array",
                "default": [
                  "de",
                  "en"
                ],
                "items": {
                  "type": "string",
                  "description": "locale string"
                }
              },
              "default_locale": {
                "type": "string",
                "default": "en",
                "description": "Which of the locales is the default"
              },
              "mailer": {
                "type": "object",
                "description": "mail config",
                "properties": {
                  "from": {
                    "type": "string",
                    "description": "The from address used in mails for user email confirmations"
                  },
                  "reply_to": {
                    "type": "string",
                    "description": "The reply address used in mails for user email confirmations"
                  },
                  "support_email": {
                    "type": "string",
                    "description": "The support address used in mails for user email confirmations"
                  },
                  "logo_b64": {
                    "type": "string",
                    "description": "A PNG logo as mail header in Base64 encoded format"
                  },
                  "footer_html": {
                    "type": "string",
                    "description": "The footer_html of the current client locale"
                  },
                  "footer_html_translations": {
                    "type": "object",
                    "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                    "properties": {
                      "en": {
                        "type": "string",
                        "description": "the english locale footer"
                      },
                      "de": {
                        "type": "string",
                        "description": "the german locale footer"
                      }
                    }
                  },
                  "smtp_settings": {
                    "type": "object",
                    "description": "smtp settings",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Address of SMTP server"
                      },
                      "port": {
                        "type": "number",
                        "description": "Port of SMTP server"
                      },
                      "domain": {
                        "type": "string",
                        "description": "HELO domain"
                      },
                      "user_name": {
                        "type": "string",
                        "description": "SMTP username"
                      },
                      "password": {
                        "type": "string",
                        "description": "SMTP password"
                      },
                      "authentication": {
                        "type": "string",
                        "description": "AuthenticationMode: plain, login or cram_md5"
                      },
                      "enable_starttls": {
                        "type": "boolean",
                        "description": "Use STARTTLS when connecting to your SMTP server and fail if unsupported"
                      },
                      "enable_starttls_auto": {
                        "type": "boolean",
                        "description": "Detects if STARTTLS is enabled in your SMTP server and starts to use it"
                      },
                      "openssl_verify_mode": {
                        "type": "string",
                        "description": "When using TLS, you can set how OpenSSL checks the certificate. This is really useful if you need to validate a self-signed and/or a wildcard certificate. You can use the name of an OpenSSL verify constant ('none' or 'peer')"
                      },
                      "ssl": {
                        "type": "string",
                        "description": "Enables the SMTP connection to use SMTP/TLS (SMTPS: SMTP over direct TLS connection)"
                      },
                      "open_timeout": {
                        "type": "number",
                        "description": "Number of seconds to wait while attempting to open a connection."
                      },
                      "read_timeout": {
                        "type": "number",
                        "description": "Number of seconds to wait until timing-out a read(2) call."
                      }
                    }
                  }
                }
              },
              "theme": {
                "type": "object",
                "description": "optional theme settings",
                "properties": {
                  "primary": {
                    "type": "object",
                    "description": "primary colors",
                    "properties": {
                      "main": {
                        "type": "string",
                        "description": "primary color"
                      },
                      "light": {
                        "type": "string",
                        "description": "lighter variant of the primary color"
                      },
                      "dark": {
                        "type": "string",
                        "description": "darker variant of the primary color"
                      }
                    }
                  },
                  "secondary": {
                    "type": "object",
                    "description": "secondary colors",
                    "properties": {
                      "main": {
                        "type": "string",
                        "description": "secondary color"
                      },
                      "light": {
                        "type": "string",
                        "description": "lighter variant of the secondary color"
                      },
                      "dark": {
                        "type": "string",
                        "description": "darker variant of the secondary color"
                      }
                    }
                  },
                  "background": {
                    "type": "object",
                    "description": "secondary colors",
                    "properties": {
                      "default": {
                        "type": "string",
                        "description": "background color"
                      }
                    }
                  },
                  "components_care": {
                    "type": "object",
                    "description": "components care specific settings",
                    "properties": {
                      "ui_kit": {
                        "type": "object",
                        "description": "theme settings for ui_kit",
                        "properties": {
                          "action_button": {
                            "type": "object",
                            "description": "theme settings for ActionButton",
                            "properties": {
                              "background_color": {
                                "type": "string",
                                "description": "background color"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "default": "light",
                    "description": "light or dark theme as base"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete App",
        "x-candos": [
          "identity-management/apps.deleter"
        ],
        "x-record-type": "app_admin",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/apps.deleter\n---\nController: `Api::V1::AppAdminController`\n\n",
        "tags": [
          "Apps"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::App deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_admin",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "default": "app-name",
            "description": "unique name of the app"
          },
          "short_name": {
            "type": "string",
            "default": "app-name",
            "description": "short name of the app"
          },
          "full_name": {
            "type": "string",
            "default": "app-name",
            "description": "full name of the app"
          },
          "languages": {
            "type": "array",
            "default": [
              "de",
              "en"
            ],
            "description": "language codes of configured locales",
            "items": {
              "type": "string",
              "description": "language code"
            }
          },
          "available_languages": {
            "type": "array",
            "default": [
              "en",
              "de",
              "fr",
              "ru",
              "nl"
            ],
            "description": "language codes of supported locales",
            "items": {
              "type": "string",
              "description": "language code"
            }
          },
          "import_candos": {
            "type": "string",
            "description": "yaml data with array of all candos the app has"
          },
          "import_roles": {
            "type": "string",
            "description": "yaml data with array of all roles the app has and assigned candos"
          },
          "locale_import_candos": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locales for this apps functionalities as yaml string"
              },
              "de": {
                "type": "string",
                "description": "the german locales for this apps functionalities as yaml string"
              }
            }
          },
          "locale_import_roles": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locales for this apps roles as yaml string"
              },
              "de": {
                "type": "string",
                "description": "the german locales for this apps roles as yaml string"
              }
            }
          },
          "config": {
            "type": "object",
            "description": "Hash of app config",
            "properties": {
              "url": {
                "type": "string",
                "default": "https://domain.local",
                "description": "URL of the app"
              },
              "uses_bearer_token": {
                "type": "boolean",
                "default": true,
                "description": "If the app bearer token will be included in redirect URL as #anchor (true) or query param for server (false)"
              },
              "locales": {
                "type": "array",
                "default": [
                  "de",
                  "en"
                ],
                "items": {
                  "type": "string",
                  "description": "locale string"
                }
              },
              "default_locale": {
                "type": "string",
                "default": "en",
                "description": "Which of the locales is the default"
              },
              "mailer": {
                "type": "object",
                "description": "mail config",
                "properties": {
                  "from": {
                    "type": "string",
                    "description": "The from address used in mails for user email confirmations"
                  },
                  "reply_to": {
                    "type": "string",
                    "description": "The reply address used in mails for user email confirmations"
                  },
                  "support_email": {
                    "type": "string",
                    "description": "The support address used in mails for user email confirmations"
                  },
                  "logo_b64": {
                    "type": "string",
                    "description": "A PNG logo as mail header in Base64 encoded format"
                  },
                  "footer_html": {
                    "type": "string",
                    "description": "The footer_html of the current client locale"
                  },
                  "footer_html_translations": {
                    "type": "object",
                    "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                    "properties": {
                      "en": {
                        "type": "string",
                        "description": "the english locale footer"
                      },
                      "de": {
                        "type": "string",
                        "description": "the german locale footer"
                      }
                    }
                  },
                  "smtp_settings": {
                    "type": "object",
                    "description": "smtp settings",
                    "properties": {
                      "address": {
                        "type": "string",
                        "description": "Address of SMTP server"
                      },
                      "port": {
                        "type": "number",
                        "description": "Port of SMTP server"
                      },
                      "domain": {
                        "type": "string",
                        "description": "HELO domain"
                      },
                      "user_name": {
                        "type": "string",
                        "description": "SMTP username"
                      },
                      "password": {
                        "type": "string",
                        "description": "SMTP password"
                      },
                      "authentication": {
                        "type": "string",
                        "description": "AuthenticationMode: plain, login or cram_md5"
                      },
                      "enable_starttls": {
                        "type": "boolean",
                        "description": "Use STARTTLS when connecting to your SMTP server and fail if unsupported"
                      },
                      "enable_starttls_auto": {
                        "type": "boolean",
                        "description": "Detects if STARTTLS is enabled in your SMTP server and starts to use it"
                      },
                      "openssl_verify_mode": {
                        "type": "string",
                        "description": "When using TLS, you can set how OpenSSL checks the certificate. This is really useful if you need to validate a self-signed and/or a wildcard certificate. You can use the name of an OpenSSL verify constant ('none' or 'peer')"
                      },
                      "ssl": {
                        "type": "string",
                        "description": "Enables the SMTP connection to use SMTP/TLS (SMTPS: SMTP over direct TLS connection)"
                      },
                      "open_timeout": {
                        "type": "number",
                        "description": "Number of seconds to wait while attempting to open a connection."
                      },
                      "read_timeout": {
                        "type": "number",
                        "description": "Number of seconds to wait until timing-out a read(2) call."
                      }
                    }
                  }
                }
              },
              "theme": {
                "type": "object",
                "description": "optional theme settings",
                "properties": {
                  "primary": {
                    "type": "object",
                    "description": "primary colors",
                    "properties": {
                      "main": {
                        "type": "string",
                        "description": "primary color"
                      },
                      "light": {
                        "type": "string",
                        "description": "lighter variant of the primary color"
                      },
                      "dark": {
                        "type": "string",
                        "description": "darker variant of the primary color"
                      }
                    }
                  },
                  "secondary": {
                    "type": "object",
                    "description": "secondary colors",
                    "properties": {
                      "main": {
                        "type": "string",
                        "description": "secondary color"
                      },
                      "light": {
                        "type": "string",
                        "description": "lighter variant of the secondary color"
                      },
                      "dark": {
                        "type": "string",
                        "description": "darker variant of the secondary color"
                      }
                    }
                  },
                  "background": {
                    "type": "object",
                    "description": "secondary colors",
                    "properties": {
                      "default": {
                        "type": "string",
                        "description": "background color"
                      }
                    }
                  },
                  "components_care": {
                    "type": "object",
                    "description": "components care specific settings",
                    "properties": {
                      "ui_kit": {
                        "type": "object",
                        "description": "theme settings for ui_kit",
                        "properties": {
                          "action_button": {
                            "type": "object",
                            "description": "theme settings for ActionButton",
                            "properties": {
                              "background_color": {
                                "type": "string",
                                "description": "background color"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "type": {
                    "type": "string",
                    "default": "light",
                    "description": "light or dark theme as base"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/contents": {
      "get": {
        "summary": "List Content",
        "x-candos": [
          "~/apps.admin+identity-management/contents.reader"
        ],
        "x-record-type": "content",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/contents.reader\n---\nController: `Api::V1::Apps::ContentsController`\n\n",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content app_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `app`, `name`, `content`, `content_de`, `content_en`, `version`, `acceptance_required`, `active`, `_keywords`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "app",
          "name",
          "content",
          "content_de",
          "content_en",
          "version",
          "acceptance_required",
          "active",
          "_keywords"
        ],
        "responses": {
          "200": {
            "description": "Contents list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "content",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actors_app_id": {
              "type": "string",
              "description": "id of the app this content belongs to"
            },
            "name": {
              "type": "string",
              "default": "app-info",
              "enum": [
                "tos",
                "privacy",
                "tos-privacy",
                "app-info"
              ],
              "description": "name of the content (like \"tos\", \"app-info\")"
            },
            "version": {
              "type": "number",
              "description": "highest active-flagged version will be used"
            },
            "content_translations": {
              "type": "object",
              "description": "Hash of locale-languages with translated content",
              "properties": {
                "de": {
                  "type": "string",
                  "default": "Deutsche Übersetzung",
                  "description": "German content"
                },
                "en": {
                  "type": "string",
                  "default": "English translation",
                  "description": "English content"
                }
              }
            },
            "active": {
              "type": "boolean",
              "default": false,
              "description": "only active flagged will be used, leave inactive during draft"
            },
            "acceptance_required": {
              "type": "boolean",
              "default": false,
              "description": "when true the user is required to accept every new version of this content"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Content",
        "x-candos": [
          "~/apps.admin+identity-management/contents.writer"
        ],
        "x-record-type": "content",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/contents.writer\n---\nController: `Api::V1::Apps::ContentsController`\n\n",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actors_app_id": {
                      "type": "string",
                      "description": "id of the app this content belongs to"
                    },
                    "name": {
                      "type": "string",
                      "default": "app-info",
                      "enum": [
                        "tos",
                        "privacy",
                        "tos-privacy",
                        "app-info"
                      ],
                      "description": "name of the content (like \"tos\", \"app-info\")"
                    },
                    "version": {
                      "type": "number",
                      "description": "highest active-flagged version will be used"
                    },
                    "content_translations": {
                      "type": "object",
                      "description": "Hash of locale-languages with translated content",
                      "properties": {
                        "de": {
                          "type": "string",
                          "default": "Deutsche Übersetzung",
                          "description": "German content"
                        },
                        "en": {
                          "type": "string",
                          "default": "English translation",
                          "description": "English content"
                        }
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "default": false,
                      "description": "only active flagged will be used, leave inactive during draft"
                    },
                    "acceptance_required": {
                      "type": "boolean",
                      "default": false,
                      "description": "when true the user is required to accept every new version of this content"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "content",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actors_app_id": {
            "type": "string",
            "description": "id of the app this content belongs to"
          },
          "name": {
            "type": "string",
            "default": "app-info",
            "enum": [
              "tos",
              "privacy",
              "tos-privacy",
              "app-info"
            ],
            "description": "name of the content (like \"tos\", \"app-info\")"
          },
          "version": {
            "type": "number",
            "description": "highest active-flagged version will be used"
          },
          "content_translations": {
            "type": "object",
            "description": "Hash of locale-languages with translated content",
            "properties": {
              "de": {
                "type": "string",
                "default": "Deutsche Übersetzung",
                "description": "German content"
              },
              "en": {
                "type": "string",
                "default": "English translation",
                "description": "English content"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": false,
            "description": "only active flagged will be used, leave inactive during draft"
          },
          "acceptance_required": {
            "type": "boolean",
            "default": false,
            "description": "when true the user is required to accept every new version of this content"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/contents/{id}": {
      "get": {
        "summary": "Show Content",
        "x-candos": [
          "public"
        ],
        "x-record-type": "content",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- public\n---\nController: `Api::V1::Apps::ContentsController`\n\n",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content id"
          }
        ],
        "responses": {
          "200": {
            "description": "Content view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "content",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actors_app_id": {
            "type": "string",
            "description": "id of the app this content belongs to"
          },
          "name": {
            "type": "string",
            "default": "app-info",
            "enum": [
              "tos",
              "privacy",
              "tos-privacy",
              "app-info"
            ],
            "description": "name of the content (like \"tos\", \"app-info\")"
          },
          "version": {
            "type": "number",
            "description": "highest active-flagged version will be used"
          },
          "content_translations": {
            "type": "object",
            "description": "Hash of locale-languages with translated content",
            "properties": {
              "de": {
                "type": "string",
                "default": "Deutsche Übersetzung",
                "description": "German content"
              },
              "en": {
                "type": "string",
                "default": "English translation",
                "description": "English content"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": false,
            "description": "only active flagged will be used, leave inactive during draft"
          },
          "acceptance_required": {
            "type": "boolean",
            "default": false,
            "description": "when true the user is required to accept every new version of this content"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update Content",
        "x-candos": [
          "~/apps.admin+identity-management/contents.writer"
        ],
        "x-record-type": "content",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/contents.writer\n---\nController: `Api::V1::Apps::ContentsController`\n\n",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actors_app_id": {
                      "type": "string",
                      "description": "id of the app this content belongs to"
                    },
                    "name": {
                      "type": "string",
                      "default": "app-info",
                      "enum": [
                        "tos",
                        "privacy",
                        "tos-privacy",
                        "app-info"
                      ],
                      "description": "name of the content (like \"tos\", \"app-info\")"
                    },
                    "version": {
                      "type": "number",
                      "description": "highest active-flagged version will be used"
                    },
                    "content_translations": {
                      "type": "object",
                      "description": "Hash of locale-languages with translated content",
                      "properties": {
                        "de": {
                          "type": "string",
                          "default": "Deutsche Übersetzung",
                          "description": "German content"
                        },
                        "en": {
                          "type": "string",
                          "default": "English translation",
                          "description": "English content"
                        }
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "default": false,
                      "description": "only active flagged will be used, leave inactive during draft"
                    },
                    "acceptance_required": {
                      "type": "boolean",
                      "default": false,
                      "description": "when true the user is required to accept every new version of this content"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Content updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "content",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actors_app_id": {
            "type": "string",
            "description": "id of the app this content belongs to"
          },
          "name": {
            "type": "string",
            "default": "app-info",
            "enum": [
              "tos",
              "privacy",
              "tos-privacy",
              "app-info"
            ],
            "description": "name of the content (like \"tos\", \"app-info\")"
          },
          "version": {
            "type": "number",
            "description": "highest active-flagged version will be used"
          },
          "content_translations": {
            "type": "object",
            "description": "Hash of locale-languages with translated content",
            "properties": {
              "de": {
                "type": "string",
                "default": "Deutsche Übersetzung",
                "description": "German content"
              },
              "en": {
                "type": "string",
                "default": "English translation",
                "description": "English content"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": false,
            "description": "only active flagged will be used, leave inactive during draft"
          },
          "acceptance_required": {
            "type": "boolean",
            "default": false,
            "description": "when true the user is required to accept every new version of this content"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Content",
        "x-candos": [
          "~/apps.admin+identity-management/contents.deleter"
        ],
        "x-record-type": "content",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/contents.deleter\n---\nController: `Api::V1::Apps::ContentsController`\n\n",
        "tags": [
          "Content"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Content id"
          }
        ],
        "responses": {
          "200": {
            "description": "Content deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "content",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actors_app_id": {
            "type": "string",
            "description": "id of the app this content belongs to"
          },
          "name": {
            "type": "string",
            "default": "app-info",
            "enum": [
              "tos",
              "privacy",
              "tos-privacy",
              "app-info"
            ],
            "description": "name of the content (like \"tos\", \"app-info\")"
          },
          "version": {
            "type": "number",
            "description": "highest active-flagged version will be used"
          },
          "content_translations": {
            "type": "object",
            "description": "Hash of locale-languages with translated content",
            "properties": {
              "de": {
                "type": "string",
                "default": "Deutsche Übersetzung",
                "description": "German content"
              },
              "en": {
                "type": "string",
                "default": "English translation",
                "description": "English content"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": false,
            "description": "only active flagged will be used, leave inactive during draft"
          },
          "acceptance_required": {
            "type": "boolean",
            "default": false,
            "description": "when true the user is required to accept every new version of this content"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/functionalities/{functionality_id}/roles": {
      "get": {
        "summary": "List Roles",
        "x-candos": [
          "~/apps.admin+identity-management/roles.reader"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.reader\n---\nController: `Api::V1::Apps::Functionalities::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "functionality_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role functionality_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `app`, `title`, `description`, `name`, `write_protected`, `system`, `_keywords`, `functionality_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "app",
          "title",
          "description",
          "name",
          "write_protected",
          "system",
          "_keywords",
          "functionality_ids"
        ],
        "responses": {
          "200": {
            "description": "Roles list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "role",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "name": {
              "type": "string",
              "description": "unique role name"
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title (current locale)"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale title"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale title"
                }
              }
            },
            "description": {
              "type": "string",
              "description": "a description about what this role allows to do (current locale)"
            },
            "description_translations": {
              "type": "object",
              "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale description"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale description"
                }
              }
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this role belongs to"
            },
            "functionality_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "id of a functionality assigned to this role"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create role",
        "x-candos": [
          "~/apps.admin+identity-management/roles.writer"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.writer\n---\nController: `Api::V1::Apps::Functionalities::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "functionality_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role functionality_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/functionalities/{functionality_id}/roles/{id}": {
      "get": {
        "summary": "Show role",
        "x-candos": [
          "~/apps.admin+identity-management/roles.reader"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.reader\n---\nController: `Api::V1::Apps::Functionalities::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "functionality_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role functionality_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete role",
        "x-candos": [
          "~/apps.admin+identity-management/roles.writer"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.writer\n---\nController: `Api::V1::Apps::Functionalities::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "functionality_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role functionality_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/functionalities": {
      "get": {
        "summary": "List Functionalities",
        "x-candos": [
          "~/apps.admin+identity-management/functionalities.reader"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/functionalities.reader\n---\nController: `Api::V1::Apps::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `title`, `description`, `app`, `module`, `ident`, `quickfilter`, `_keywords`, `role_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "title",
          "description",
          "app",
          "module",
          "ident",
          "quickfilter",
          "_keywords",
          "role_ids"
        ],
        "responses": {
          "200": {
            "description": "Functionalities list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "functionality",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "role_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "id of a role"
              }
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title"
            },
            "description": {
              "type": "string",
              "default": "description",
              "description": "a description about what this functionality allows to do"
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this functionality belongs to"
            },
            "module": {
              "type": "string",
              "default": "module",
              "description": "the module of the app this functionality belongs to"
            },
            "ident": {
              "type": "string",
              "default": "ident",
              "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Functionality",
        "x-candos": [
          "~/apps.admin+identity-management/functionalities.writer"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/functionalities.writer\n---\nController: `Api::V1::Apps::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "title": {
                      "type": "string",
                      "default": "title",
                      "description": "a descriptive title (current locale)"
                    },
                    "description": {
                      "type": "string",
                      "description": "a description about what this functionality allows to do (current locale)"
                    },
                    "module": {
                      "type": "string",
                      "default": "module",
                      "description": "the module of the app this functionality belongs to"
                    },
                    "ident": {
                      "type": "string",
                      "default": "ident",
                      "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
                    },
                    "role_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "id of a role"
                      }
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale title"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale title"
                        }
                      }
                    },
                    "description_translations": {
                      "type": "object",
                      "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale description"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale description"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Functionality created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "functionality",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this functionality allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this functionality belongs to"
          },
          "module": {
            "type": "string",
            "default": "module",
            "description": "the module of the app this functionality belongs to"
          },
          "ident": {
            "type": "string",
            "default": "ident",
            "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/functionalities/{id}": {
      "get": {
        "summary": "Show Functionality",
        "x-candos": [
          "~/apps.admin+identity-management/functionalities.reader"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/functionalities.reader\n---\nController: `Api::V1::Apps::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality id"
          }
        ],
        "responses": {
          "200": {
            "description": "Functionality view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "functionality",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this functionality allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this functionality belongs to"
          },
          "module": {
            "type": "string",
            "default": "module",
            "description": "the module of the app this functionality belongs to"
          },
          "ident": {
            "type": "string",
            "default": "ident",
            "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update Functionality",
        "x-candos": [
          "~/apps.admin+identity-management/functionalities.writer"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/functionalities.writer\n---\nController: `Api::V1::Apps::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "title": {
                      "type": "string",
                      "default": "title",
                      "description": "a descriptive title (current locale)"
                    },
                    "description": {
                      "type": "string",
                      "description": "a description about what this functionality allows to do (current locale)"
                    },
                    "module": {
                      "type": "string",
                      "default": "module",
                      "description": "the module of the app this functionality belongs to"
                    },
                    "ident": {
                      "type": "string",
                      "default": "ident",
                      "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
                    },
                    "role_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "id of a role"
                      }
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale title"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale title"
                        }
                      }
                    },
                    "description_translations": {
                      "type": "object",
                      "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale description"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale description"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Functionality updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "functionality",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this functionality allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this functionality belongs to"
          },
          "module": {
            "type": "string",
            "default": "module",
            "description": "the module of the app this functionality belongs to"
          },
          "ident": {
            "type": "string",
            "default": "ident",
            "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Functionality",
        "x-candos": [
          "~/apps.admin+identity-management/functionalities.deleter"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/functionalities.deleter\n---\nController: `Api::V1::Apps::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality id"
          }
        ],
        "responses": {
          "200": {
            "description": "Functionality deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "functionality",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this functionality allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this functionality belongs to"
          },
          "module": {
            "type": "string",
            "default": "module",
            "description": "the module of the app this functionality belongs to"
          },
          "ident": {
            "type": "string",
            "default": "ident",
            "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/groups": {
      "get": {
        "summary": "List Groups",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "group_actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::GroupsController`\n\n",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group app_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actors::Groups list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "parent_id": {
              "type": "string",
              "description": "the id of the parent actor"
            },
            "parent_ids": {
              "type": "array",
              "description": "ids of all ancestor actors",
              "items": {
                "type": "string"
              }
            },
            "role_ids": {
              "type": "array",
              "description": "ids of roles assigned to this group",
              "items": {
                "type": "string"
              }
            },
            "map_actor_ids": {
              "type": "array",
              "description": "ids of actors mapped into this group",
              "items": {
                "type": "string"
              }
            },
            "actor_type": {
              "type": "string",
              "enum": [
                "tenant",
                "group",
                "ou"
              ],
              "default": "group",
              "description": "The type of this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "title": {
              "type": "string",
              "default": "localized title of an organizational unit or group",
              "description": "short name of this actor"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale"
                }
              }
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "created date"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "updated date"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/groups/{id}": {
      "get": {
        "summary": "Show Group",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "group_actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::GroupsController`\n\n",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Group view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the id of the parent actor"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of all ancestor actors",
            "items": {
              "type": "string"
            }
          },
          "role_ids": {
            "type": "array",
            "description": "ids of roles assigned to this group",
            "items": {
              "type": "string"
            }
          },
          "map_actor_ids": {
            "type": "array",
            "description": "ids of actors mapped into this group",
            "items": {
              "type": "string"
            }
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "group",
            "description": "The type of this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/organizations/{organization_id}/actor_roles": {
      "get": {
        "summary": "List Roles",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Organizations::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role organization_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `app`, `title`, `description`, `name`, `write_protected`, `system`, `_keywords`, `functionality_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "app",
          "title",
          "description",
          "name",
          "write_protected",
          "system",
          "_keywords",
          "functionality_ids"
        ],
        "responses": {
          "200": {
            "description": "Roles list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "role",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "name": {
              "type": "string",
              "description": "unique role name"
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title (current locale)"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale title"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale title"
                }
              }
            },
            "description": {
              "type": "string",
              "description": "a description about what this role allows to do (current locale)"
            },
            "description_translations": {
              "type": "object",
              "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale description"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale description"
                }
              }
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this role belongs to"
            },
            "functionality_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "id of a functionality assigned to this role"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create role",
        "x-candos": [
          "~/apps.admin+identity-management/actors.writer"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.writer\n---\nController: `Api::V1::Apps::Organizations::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role organization_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/organizations/{organization_id}/actor_roles/{id}": {
      "get": {
        "summary": "Show role",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Organizations::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role organization_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete role",
        "x-candos": [
          "~/apps.admin+identity-management/actors.writer"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.writer\n---\nController: `Api::V1::Apps::Organizations::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role organization_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/organizations": {
      "get": {
        "summary": "List Actors",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::OrganizationsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actors list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "parent_id": {
              "type": "string",
              "description": "the parent record id"
            },
            "leaf": {
              "type": "boolean",
              "default": false,
              "description": "when true this is the last element of a tree"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "insertable_child_types": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the type of actor that is allowed as a child of this actor"
              }
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "title": {
              "type": "string",
              "default": "localized title of an organizational unit or group",
              "description": "short name of this actor"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale"
                }
              }
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            },
            "deleted": {
              "type": "boolean",
              "default": false,
              "description": "indicating if this actor is marked as deleted"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Actor",
        "x-candos": [
          "~/apps.admin+identity-management/actors.writer"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.writer\n---\nController: `Api::V1::Apps::OrganizationsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "parent_id": {
                      "type": "string",
                      "description": "the parent record id"
                    },
                    "name": {
                      "type": "string",
                      "default": "short name",
                      "description": "descriptive name (alphanumeric lowercase) to build a unique path"
                    },
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "actor_type": {
                      "type": "string",
                      "default": "ou",
                      "description": "type of actor"
                    },
                    "title": {
                      "type": "string",
                      "default": "localized title of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/organizations/{id}": {
      "get": {
        "summary": "Show Actor",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::OrganizationsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actor view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update Actor",
        "x-candos": [
          "~/apps.admin+identity-management/actors.writer"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.writer\n---\nController: `Api::V1::Apps::OrganizationsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "title": {
                      "type": "string",
                      "default": "localized title of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Actor",
        "x-candos": [
          "~/apps.admin+identity-management/actors.deleter"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.deleter\n---\nController: `Api::V1::Apps::OrganizationsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actor deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/organizations_tree": {
      "get": {
        "summary": "Show Actor",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::OrganizationsTreeController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actor view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "parent_id": {
              "type": "string",
              "description": "the parent record id"
            },
            "leaf": {
              "type": "boolean",
              "default": false,
              "description": "when true this is the last element of a tree"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "insertable_child_types": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the type of actor that is allowed as a child of this actor"
              }
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "title": {
              "type": "string",
              "default": "localized title of an organizational unit or group",
              "description": "short name of this actor"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale"
                }
              }
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            },
            "deleted": {
              "type": "boolean",
              "default": false,
              "description": "indicating if this actor is marked as deleted"
            }
          }
        }
      }
    },
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Actor",
        "x-record-type": "actor",
        "x-candos": "actor",
        "description": "Controller: `Api::V1::Apps::OrganizationsTreeController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "actor_type": {
                      "type": "string",
                      "default": "ou",
                      "description": "type of actor"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update Actor",
        "x-record-type": "actor",
        "x-candos": "actor",
        "description": "Controller: `Api::V1::Apps::OrganizationsTreeController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Actor",
        "x-record-type": "actor",
        "x-candos": "actor",
        "description": "Controller: `Api::V1::Apps::OrganizationsTreeController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actor deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/picker/functionalities/{functionality_id}/roles": {
      "get": {
        "summary": "List Roles",
        "x-candos": [
          "~/apps.admin+identity-management/roles.reader+identity-management/functionalities.reader"
        ],
        "x-record-type": "picker_functionality_role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.reader+identity-management/functionalities.reader\n---\nController: `Api::V1::Apps::Picker::Functionalities::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "functionality_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role functionality_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `app`, `title`, `description`, `name`, `write_protected`, `system`, `_keywords`, `functionality_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "app",
          "title",
          "description",
          "name",
          "write_protected",
          "system",
          "_keywords",
          "functionality_ids"
        ],
        "responses": {
          "200": {
            "description": "Roles list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "role",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "name": {
              "type": "string",
              "description": "unique role name"
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title (current locale)"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale title"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale title"
                }
              }
            },
            "description": {
              "type": "string",
              "description": "a description about what this role allows to do (current locale)"
            },
            "description_translations": {
              "type": "object",
              "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale description"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale description"
                }
              }
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this role belongs to"
            },
            "functionality_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "id of a functionality assigned to this role"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/picker/functionalities/{functionality_id}/roles/{id}": {
      "get": {
        "summary": "Show role",
        "x-candos": [
          "~/apps.admin+identity-management/roles.reader+identity-management/functionalities.reader"
        ],
        "x-record-type": "picker_functionality_role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.reader+identity-management/functionalities.reader\n---\nController: `Api::V1::Apps::Picker::Functionalities::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "functionality_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role functionality_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/picker/roles/{role_id}/functionalities": {
      "get": {
        "summary": "List Functionalities",
        "x-candos": [
          "~/apps.admin+identity-management/functionalities.reader+identity-management/roles.reader"
        ],
        "x-record-type": "picker_role_functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/functionalities.reader+identity-management/roles.reader\n---\nController: `Api::V1::Apps::Picker::Roles::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality role_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `title`, `description`, `app`, `module`, `ident`, `quickfilter`, `_keywords`, `role_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "title",
          "description",
          "app",
          "module",
          "ident",
          "quickfilter",
          "_keywords",
          "role_ids"
        ],
        "responses": {
          "200": {
            "description": "Functionalities list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "functionality",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title (current locale)"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale title"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale title"
                }
              }
            },
            "description": {
              "type": "string",
              "description": "a description about what this functionality allows to do (current locale)"
            },
            "description_translations": {
              "type": "object",
              "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale description"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale description"
                }
              }
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this functionality belongs to"
            },
            "module": {
              "type": "string",
              "default": "module",
              "description": "the module of the app this functionality belongs to"
            },
            "ident": {
              "type": "string",
              "default": "ident",
              "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
            },
            "role_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "id of a role"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/picker/roles/{role_id}/functionalities/{id}": {
      "get": {
        "summary": "Show Functionality",
        "x-candos": [
          "~/apps.admin+identity-management/functionalities.reader+identity-management/roles.reader"
        ],
        "x-record-type": "picker_role_functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/functionalities.reader+identity-management/roles.reader\n---\nController: `Api::V1::Apps::Picker::Roles::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality role_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality id"
          }
        ],
        "responses": {
          "200": {
            "description": "Functionality view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "functionality",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this functionality allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this functionality belongs to"
          },
          "module": {
            "type": "string",
            "default": "module",
            "description": "the module of the app this functionality belongs to"
          },
          "ident": {
            "type": "string",
            "default": "ident",
            "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/picker/roles/{role_id}/user_organization": {
      "get": {
        "summary": "Show Actor",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader+identity-management/roles.reader"
        ],
        "x-record-type": "picker_role_actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader+identity-management/roles.reader\n---\nController: `Api::V1::Apps::Picker::Roles::UserOrganizationController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor role_id"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actor view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "title": {
              "type": "string",
              "default": "localized title of an organizational unit or group",
              "description": "short name of this actor"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale"
                }
              }
            },
            "already_in_role": {
              "type": "boolean",
              "description": "Boolean that signals if this actor is already in the role of the nested resource set"
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            }
          }
        }
      }
    },
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "already_in_role": {
            "type": "boolean",
            "description": "Boolean that signals if this actor is already in the role of the nested resource set"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/picker/user_organization": {
      "get": {
        "summary": "Show Actor",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Picker::UserOrganizationController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actor view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "insertable_child_types": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the type of actor that is allowed as a child of this actor"
              }
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            }
          }
        }
      }
    },
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "actor"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "leaf": {
            "type": "boolean",
            "description": ""
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "insertable_child_types": {
            "type": "array",
            "description": "for frontend ruleset only",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/picker/users/{user_id}/groups": {
      "get": {
        "summary": "List Groups",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "picker_user_group",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Picker::Users::GroupsController`\n\n",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group user_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actors::Groups list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "parent_id": {
              "type": "string",
              "description": "the id of the parent actor"
            },
            "parent_ids": {
              "type": "array",
              "description": "ids of all ancestor actors",
              "items": {
                "type": "string"
              }
            },
            "actor_type": {
              "type": "string",
              "enum": [
                "tenant",
                "group",
                "ou"
              ],
              "default": "group",
              "description": "The type of this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "title": {
              "type": "string",
              "default": "localized title of an organizational unit or group",
              "description": "short name of this actor"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale"
                }
              }
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "created date"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "updated date"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/picker/users/{user_id}/groups/{id}": {
      "get": {
        "summary": "Show Group",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "picker_user_group",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Picker::Users::GroupsController`\n\n",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Group view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the id of the parent actor"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of all ancestor actors",
            "items": {
              "type": "string"
            }
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "group",
            "description": "The type of this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/roles/{role_id}/actor_roles": {
      "get": {
        "summary": "List Roles",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Roles::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role role_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `app`, `title`, `description`, `name`, `write_protected`, `system`, `_keywords`, `functionality_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "app",
          "title",
          "description",
          "name",
          "write_protected",
          "system",
          "_keywords",
          "functionality_ids"
        ],
        "responses": {
          "200": {
            "description": "Roles list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "role",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "name": {
              "type": "string",
              "description": "unique role name"
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title (current locale)"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale title"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale title"
                }
              }
            },
            "description": {
              "type": "string",
              "description": "a description about what this role allows to do (current locale)"
            },
            "description_translations": {
              "type": "object",
              "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale description"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale description"
                }
              }
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this role belongs to"
            },
            "functionality_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "id of a functionality assigned to this role"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create role",
        "x-candos": [
          "~/apps.admin+identity-management/actors.writer"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.writer\n---\nController: `Api::V1::Apps::Roles::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role role_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/roles/{role_id}/actor_roles/{id}": {
      "get": {
        "summary": "Show role",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Roles::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role role_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete role",
        "x-candos": [
          "~/apps.admin+identity-management/actors.writer"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.writer\n---\nController: `Api::V1::Apps::Roles::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role role_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/roles/{role_id}/actors": {
      "get": {
        "summary": "List Actors",
        "x-candos": [
          "~/apps.admin+identity-management/roles.reader+identity-management/actors.reader"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.reader+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Roles::ActorsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor role_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actors list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "insertable_child_types": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the type of actor that is allowed as a child of this actor"
              }
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/roles/{role_id}/actors/{id}": {
      "get": {
        "summary": "Show Actor",
        "x-candos": [
          "~/apps.admin+identity-management/roles.reader+identity-management/actors.reader"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.reader+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Roles::ActorsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor role_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actor view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "actor"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "leaf": {
            "type": "boolean",
            "description": ""
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "insertable_child_types": {
            "type": "array",
            "description": "for frontend ruleset only",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/roles/{role_id}/functionalities": {
      "get": {
        "summary": "List Functionalities",
        "x-candos": [
          "~/apps.admin+identity-management/roles.reader"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.reader\n---\nController: `Api::V1::Apps::Roles::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality role_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `title`, `description`, `app`, `module`, `ident`, `quickfilter`, `_keywords`, `role_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "title",
          "description",
          "app",
          "module",
          "ident",
          "quickfilter",
          "_keywords",
          "role_ids"
        ],
        "responses": {
          "200": {
            "description": "Functionalities list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "functionality",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title (current locale)"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale title"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale title"
                }
              }
            },
            "description": {
              "type": "string",
              "description": "a description about what this functionality allows to do (current locale)"
            },
            "description_translations": {
              "type": "object",
              "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale description"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale description"
                }
              }
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this functionality belongs to"
            },
            "module": {
              "type": "string",
              "default": "module",
              "description": "the module of the app this functionality belongs to"
            },
            "ident": {
              "type": "string",
              "default": "ident",
              "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
            },
            "role_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "id of a role"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Functionality",
        "x-candos": [
          "~/apps.admin+identity-management/roles.writer"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.writer\n---\nController: `Api::V1::Apps::Roles::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality role_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Functionality created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "functionality",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this functionality allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this functionality belongs to"
          },
          "module": {
            "type": "string",
            "default": "module",
            "description": "the module of the app this functionality belongs to"
          },
          "ident": {
            "type": "string",
            "default": "ident",
            "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/roles/{role_id}/functionalities/{id}": {
      "get": {
        "summary": "Show Functionality",
        "x-candos": [
          "~/apps.admin+identity-management/roles.reader"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.reader\n---\nController: `Api::V1::Apps::Roles::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality role_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality id"
          }
        ],
        "responses": {
          "200": {
            "description": "Functionality view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "functionality",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this functionality allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this functionality belongs to"
          },
          "module": {
            "type": "string",
            "default": "module",
            "description": "the module of the app this functionality belongs to"
          },
          "ident": {
            "type": "string",
            "default": "ident",
            "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Functionality",
        "x-candos": [
          "~/apps.admin+identity-management/roles.writer"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.writer\n---\nController: `Api::V1::Apps::Roles::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "role_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality role_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality id"
          }
        ],
        "responses": {
          "200": {
            "description": "Functionality deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "functionality",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this functionality allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this functionality belongs to"
          },
          "module": {
            "type": "string",
            "default": "module",
            "description": "the module of the app this functionality belongs to"
          },
          "ident": {
            "type": "string",
            "default": "ident",
            "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/roles": {
      "get": {
        "summary": "List Roles",
        "x-candos": [
          "~/apps.admin+identity-management/roles.reader"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.reader\n---\nController: `Api::V1::Apps::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `app`, `title`, `description`, `name`, `write_protected`, `system`, `_keywords`, `functionality_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "app",
          "title",
          "description",
          "name",
          "write_protected",
          "system",
          "_keywords",
          "functionality_ids"
        ],
        "responses": {
          "200": {
            "description": "Roles list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "role",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title"
            },
            "description": {
              "type": "string",
              "default": "description",
              "description": "a description about what this role allows to do"
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this role belongs to"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create role",
        "x-candos": [
          "~/apps.admin+identity-management/roles.writer"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.writer\n---\nController: `Api::V1::Apps::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "title": {
                      "type": "string",
                      "default": "title",
                      "description": "a descriptive title (current locale)"
                    },
                    "description": {
                      "type": "string",
                      "description": "a description about what this role allows to do (current locale)"
                    },
                    "functionality_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "id of a functionality assigned to this role"
                      }
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale title"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale title"
                        }
                      }
                    },
                    "description_translations": {
                      "type": "object",
                      "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale description"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale description"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/roles/{id}": {
      "get": {
        "summary": "Show role",
        "x-candos": [
          "~/apps.admin+identity-management/roles.reader"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.reader\n---\nController: `Api::V1::Apps::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update role",
        "x-candos": [
          "~/apps.admin+identity-management/roles.writer"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.writer\n---\nController: `Api::V1::Apps::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "title": {
                      "type": "string",
                      "default": "title",
                      "description": "a descriptive title (current locale)"
                    },
                    "description": {
                      "type": "string",
                      "description": "a description about what this role allows to do (current locale)"
                    },
                    "functionality_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "id of a functionality assigned to this role"
                      }
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale title"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale title"
                        }
                      }
                    },
                    "description_translations": {
                      "type": "object",
                      "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale description"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale description"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete role",
        "x-candos": [
          "~/apps.admin+identity-management/roles.deleter"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/roles.deleter\n---\nController: `Api::V1::Apps::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/organizations/{organization_id}/actor_roles": {
      "get": {
        "summary": "List Roles",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Organizations::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role tenant_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role organization_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `app`, `title`, `description`, `name`, `write_protected`, `system`, `_keywords`, `functionality_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "app",
          "title",
          "description",
          "name",
          "write_protected",
          "system",
          "_keywords",
          "functionality_ids"
        ],
        "responses": {
          "200": {
            "description": "Roles list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "role",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "name": {
              "type": "string",
              "description": "unique role name"
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title (current locale)"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale title"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale title"
                }
              }
            },
            "description": {
              "type": "string",
              "description": "a description about what this role allows to do (current locale)"
            },
            "description_translations": {
              "type": "object",
              "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale description"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale description"
                }
              }
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this role belongs to"
            },
            "functionality_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "id of a functionality assigned to this role"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create role",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Organizations::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role tenant_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role organization_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {}
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/organizations/{organization_id}/actor_roles/{id}": {
      "get": {
        "summary": "Show role",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Organizations::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role tenant_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role organization_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete role",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Organizations::ActorRolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role tenant_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role organization_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/organizations/{organization_id}/mappings": {
      "get": {
        "summary": "List Mappings",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "mapping",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Organizations::MappingsController`\n\n",
        "tags": [
          "Mappings"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping tenant_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping organization_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`, `mapped_into_id`, `user_id`, `app_id`, `tenant_id`, `parent_template_actor_id`, `cached_role_ids`, `cached_role_names`, `cached_candos`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type",
          "mapped_into_id",
          "user_id",
          "app_id",
          "tenant_id",
          "parent_template_actor_id",
          "cached_role_ids",
          "cached_role_names",
          "cached_candos"
        ],
        "responses": {
          "200": {
            "description": "Actors::Mappings list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "mapping",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "parent_id": {
              "type": "string",
              "description": "id of the parent node"
            },
            "map_actor_id": {
              "type": "string",
              "description": "id of the actor that is mapped into the parent node"
            },
            "short_name": {
              "type": "string",
              "description": "the friendly name of the mapped actor (e.g. Users name )"
            },
            "path": {
              "type": "string",
              "description": "complete path within the hierarchical structure"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Mapping",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "mapping",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Organizations::MappingsController`\n\n",
        "tags": [
          "Mappings"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping tenant_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping organization_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "map_actor_id": {
                      "type": "string",
                      "description": "id of the actor that is mapped into the parent node"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Mapping created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "mapping",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "id of the parent node"
          },
          "map_actor_id": {
            "type": "string",
            "description": "id of the actor that is mapped into the parent node"
          },
          "short_name": {
            "type": "string",
            "description": "the friendly name of the mapped actor (e.g. Users name )"
          },
          "path": {
            "type": "string",
            "description": "complete path within the hierarchical structure"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/organizations/{organization_id}/mappings/{id}": {
      "get": {
        "summary": "Show Mapping",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "mapping",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Organizations::MappingsController`\n\n",
        "tags": [
          "Mappings"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping tenant_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping organization_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Mapping view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "mapping",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "id of the parent node"
          },
          "map_actor_id": {
            "type": "string",
            "description": "id of the actor that is mapped into the parent node"
          },
          "short_name": {
            "type": "string",
            "description": "the friendly name of the mapped actor (e.g. Users name )"
          },
          "path": {
            "type": "string",
            "description": "complete path within the hierarchical structure"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Mapping",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "mapping",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Organizations::MappingsController`\n\n",
        "tags": [
          "Mappings"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping tenant_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping organization_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Mapping deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "mapping",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "id of the parent node"
          },
          "map_actor_id": {
            "type": "string",
            "description": "id of the actor that is mapped into the parent node"
          },
          "short_name": {
            "type": "string",
            "description": "the friendly name of the mapped actor (e.g. Users name )"
          },
          "path": {
            "type": "string",
            "description": "complete path within the hierarchical structure"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/organizations/{organization_id}/picker/mappable_users": {
      "get": {
        "summary": "List Actors",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "mappable_user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Organizations::Picker::MappableUsersController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor organization_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actors::Users list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "email": {
              "type": "string",
              "description": "email address of the associated user"
            },
            "already_in_orga": {
              "type": "boolean",
              "description": "Boolean that signals if this actor is already in the orga of the nested resource set"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/organizations": {
      "get": {
        "summary": "List Actors",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::OrganizationsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actors list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "parent_id": {
              "type": "string",
              "description": "the parent record id"
            },
            "leaf": {
              "type": "boolean",
              "default": false,
              "description": "when true this is the last element of a tree"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "insertable_child_types": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the type of actor that is allowed as a child of this actor"
              }
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "title": {
              "type": "string",
              "default": "localized title of an organizational unit or group",
              "description": "short name of this actor"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale"
                }
              }
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            },
            "deleted": {
              "type": "boolean",
              "default": false,
              "description": "indicating if this actor is marked as deleted"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Actor",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::OrganizationsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "name": {
                      "type": "string",
                      "default": "short name",
                      "description": "descriptive name (alphanumeric lowercase) to build a unique path"
                    },
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "actor_type": {
                      "type": "string",
                      "default": "ou",
                      "description": "type of actor"
                    },
                    "parent_id": {
                      "type": "string",
                      "description": "the parent record id"
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/organizations/{id}": {
      "get": {
        "summary": "Show Actor",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::OrganizationsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actor view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update Actor",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::OrganizationsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "name": {
                      "type": "string",
                      "default": "short name",
                      "description": "descriptive name (alphanumeric lowercase) to build a unique path"
                    },
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Actor",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::OrganizationsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actor deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/organizations_tree": {
      "get": {
        "summary": "Show Actor",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::OrganizationsTreeController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actor view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "parent_id": {
              "type": "string",
              "description": "the parent record id"
            },
            "leaf": {
              "type": "boolean",
              "default": false,
              "description": "when true this is the last element of a tree"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "insertable_child_types": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the type of actor that is allowed as a child of this actor"
              }
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "title": {
              "type": "string",
              "default": "localized title of an organizational unit or group",
              "description": "short name of this actor"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale"
                }
              }
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            },
            "deleted": {
              "type": "boolean",
              "default": false,
              "description": "indicating if this actor is marked as deleted"
            }
          }
        }
      }
    },
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Actor",
        "x-record-type": "actor",
        "x-candos": "actor",
        "description": "Controller: `Api::V1::Apps::Tenants::OrganizationsTreeController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "name": {
                      "type": "string",
                      "default": "short name",
                      "description": "descriptive name (alphanumeric lowercase) to build a unique path"
                    },
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "actor_type": {
                      "type": "string",
                      "default": "ou",
                      "description": "type of actor"
                    },
                    "parent_id": {
                      "type": "string",
                      "description": "the parent record id"
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update Actor",
        "x-record-type": "actor",
        "x-candos": "actor",
        "description": "Controller: `Api::V1::Apps::Tenants::OrganizationsTreeController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "name": {
                      "type": "string",
                      "default": "short name",
                      "description": "descriptive name (alphanumeric lowercase) to build a unique path"
                    },
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Actor",
        "x-record-type": "actor",
        "x-candos": "actor",
        "description": "Controller: `Api::V1::Apps::Tenants::OrganizationsTreeController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actor deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the parent record id"
          },
          "leaf": {
            "type": "boolean",
            "default": false,
            "description": "when true this is the last element of a tree"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "default": false,
            "description": "indicating if this actor is marked as deleted"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/picker/mappable_users": {
      "get": {
        "summary": "List Actors",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "mappable_user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Picker::MappableUsersController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actors::Users list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "email": {
              "type": "string",
              "description": "email address of the associated user"
            },
            "already_in_orga": {
              "type": "boolean",
              "description": "Boolean that signals if this actor is already in the orga of the nested resource set"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/picker/user_organization": {
      "get": {
        "summary": "Show Actor",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Picker::UserOrganizationController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor tenant_id"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actor view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "insertable_child_types": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the type of actor that is allowed as a child of this actor"
              }
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            }
          }
        }
      }
    },
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "actor"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "leaf": {
            "type": "boolean",
            "description": ""
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "insertable_child_types": {
            "type": "array",
            "description": "for frontend ruleset only",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/picker/users/{user_id}/groups": {
      "get": {
        "summary": "List Groups",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "picker_user_group",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Tenants::Picker::Users::GroupsController`\n\n",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group tenant_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group user_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actors::Groups list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "parent_id": {
              "type": "string",
              "description": "the id of the parent actor"
            },
            "parent_ids": {
              "type": "array",
              "description": "ids of all ancestor actors",
              "items": {
                "type": "string"
              }
            },
            "actor_type": {
              "type": "string",
              "enum": [
                "tenant",
                "group",
                "ou"
              ],
              "default": "group",
              "description": "The type of this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "title": {
              "type": "string",
              "default": "localized title of an organizational unit or group",
              "description": "short name of this actor"
            },
            "title_translations": {
              "type": "object",
              "properties": {
                "en": {
                  "type": "string",
                  "description": "the english locale"
                },
                "de": {
                  "type": "string",
                  "description": "the german locale"
                }
              }
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "created date"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "updated date"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/picker/users/{user_id}/groups/{id}": {
      "get": {
        "summary": "Show Group",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "picker_user_group",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Tenants::Picker::Users::GroupsController`\n\n",
        "tags": [
          "Groups"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group tenant_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Group id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Group view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "the id of the parent actor"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of all ancestor actors",
            "items": {
              "type": "string"
            }
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "group",
            "description": "The type of this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/users/{user_id}/actors": {
      "get": {
        "summary": "List Mappings",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Users::ActorsController`\n\n",
        "tags": [
          "Mappings"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping tenant_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping user_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`, `mapped_into_id`, `user_id`, `app_id`, `tenant_id`, `parent_template_actor_id`, `cached_role_ids`, `cached_role_names`, `cached_candos`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type",
          "mapped_into_id",
          "user_id",
          "app_id",
          "tenant_id",
          "parent_template_actor_id",
          "cached_role_ids",
          "cached_role_names",
          "cached_candos"
        ],
        "responses": {
          "200": {
            "description": "Actors::Mappings list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id (of mapping)"
            },
            "actor_id": {
              "type": "string",
              "description": "unique record id of actor pointed to by this mapping"
            },
            "actor_type": {
              "type": "string",
              "enum": [
                "tenant",
                "group",
                "ou"
              ],
              "default": "ou",
              "description": "The type of this actor"
            },
            "parent_id": {
              "type": "string",
              "description": "The id of the actor this new actor will become a children of"
            },
            "parent_ids": {
              "type": "array",
              "description": "ids of parent actors",
              "items": {
                "type": "string"
              }
            },
            "map_actor_id": {
              "type": "string",
              "description": ""
            },
            "insertable_child_types": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the type of actor that is allowed as a child of this actor"
              }
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            },
            "deleted": {
              "type": "boolean",
              "description": "flag to check whether actor is deleted"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "created date"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "updated date"
            },
            "image_b64": {
              "type": "string",
              "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
            },
            "image": {
              "type": "object",
              "description": "image with different styles",
              "properties": {
                "large": {
                  "type": "string"
                },
                "medium": {
                  "type": "string"
                },
                "small": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Mapping",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Users::ActorsController`\n\n",
        "tags": [
          "Mappings"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping tenant_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actor_id": {
                      "type": "string",
                      "description": "unique record id of actor pointed to by this mapping"
                    },
                    "actor_type": {
                      "type": "string",
                      "enum": [
                        "tenant",
                        "group",
                        "ou"
                      ],
                      "default": "ou",
                      "description": "The type of this actor"
                    },
                    "parent_id": {
                      "type": "string",
                      "description": "The id of the actor this new actor will become a children of"
                    },
                    "parent_ids": {
                      "type": "array",
                      "description": "ids of parent actors",
                      "items": {
                        "type": "string"
                      }
                    },
                    "map_actor_id": {
                      "type": "string",
                      "description": ""
                    },
                    "insertable_child_types": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "the type of actor that is allowed as a child of this actor"
                      }
                    },
                    "children_count": {
                      "type": "number",
                      "description": "number of children below this actor"
                    },
                    "path": {
                      "type": "string",
                      "description": "the path of this actor within the global tree"
                    },
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "active": {
                      "type": "boolean",
                      "default": true,
                      "description": "indicating if this actor is available"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "flag to check whether actor is deleted"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "created date"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "updated date"
                    },
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "image": {
                      "type": "object",
                      "description": "image with different styles",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Mapping created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique record id of actor pointed to by this mapping"
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/users/{user_id}/actors/{id}": {
      "get": {
        "summary": "Show Mapping",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Users::ActorsController`\n\n",
        "tags": [
          "Mappings"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping tenant_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Mapping view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique record id of actor pointed to by this mapping"
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Mapping",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Users::ActorsController`\n\n",
        "tags": [
          "Mappings"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping tenant_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Mapping deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique record id of actor pointed to by this mapping"
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/users/{user_id}/functionalities": {
      "get": {
        "summary": "List Functionalities",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Users::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality tenant_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality user_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `title`, `description`, `app`, `module`, `ident`, `quickfilter`, `_keywords`, `role_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "title",
          "description",
          "app",
          "module",
          "ident",
          "quickfilter",
          "_keywords",
          "role_ids"
        ],
        "responses": {
          "200": {
            "description": "Functionalities list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "functionality",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "role_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "id of a role"
              }
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title"
            },
            "description": {
              "type": "string",
              "default": "description",
              "description": "a description about what this functionality allows to do"
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this functionality belongs to"
            },
            "module": {
              "type": "string",
              "default": "module",
              "description": "the module of the app this functionality belongs to"
            },
            "ident": {
              "type": "string",
              "default": "ident",
              "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/users/{user_id}/functionalities/{id}": {
      "get": {
        "summary": "Show Functionality",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Users::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality tenant_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality id"
          }
        ],
        "responses": {
          "200": {
            "description": "Functionality view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "functionality",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this functionality allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this functionality belongs to"
          },
          "module": {
            "type": "string",
            "default": "module",
            "description": "the module of the app this functionality belongs to"
          },
          "ident": {
            "type": "string",
            "default": "ident",
            "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/users/{user_id}/roles": {
      "get": {
        "summary": "List Roles",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Users::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role tenant_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role user_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `app`, `title`, `description`, `name`, `write_protected`, `system`, `_keywords`, `functionality_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "app",
          "title",
          "description",
          "name",
          "write_protected",
          "system",
          "_keywords",
          "functionality_ids"
        ],
        "responses": {
          "200": {
            "description": "Roles list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "role",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title"
            },
            "description": {
              "type": "string",
              "default": "description",
              "description": "a description about what this role allows to do"
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this role belongs to"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/users/{user_id}/roles/{id}": {
      "get": {
        "summary": "Show role",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::Users::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role tenant_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/users": {
      "get": {
        "summary": "List User accounts",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account tenant_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `id`, `actor_id`, `locale`, `email`, `gender`, `title`, `first_name`, `last_name`, `created_at`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "id",
          "actor_id",
          "locale",
          "email",
          "gender",
          "title",
          "first_name",
          "last_name",
          "created_at"
        ],
        "responses": {
          "200": {
            "description": "Users list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "user",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_id": {
              "type": "string",
              "description": "referenced actor id"
            },
            "email": {
              "type": "string",
              "description": "e-mail address"
            },
            "gender": {
              "type": "number",
              "enum": [
                0,
                1,
                2
              ],
              "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
            },
            "first_name": {
              "type": "string",
              "description": "first name"
            },
            "last_name": {
              "type": "string",
              "description": "last name"
            },
            "short": {
              "type": "string",
              "description": "short name (combination of first and last names)"
            },
            "image": {
              "type": "object",
              "description": "image in different sizes",
              "properties": {
                "large": {
                  "type": "string"
                },
                "medium": {
                  "type": "string"
                },
                "small": {
                  "type": "string"
                }
              }
            },
            "title": {
              "type": "string",
              "description": "an optional user title"
            },
            "mobile": {
              "type": "string",
              "description": "mobile number"
            },
            "active": {
              "type": "boolean",
              "description": "if set false the login will be disabled"
            },
            "invalid_at": {
              "type": "string",
              "format": "date-time",
              "description": "if set the login will be disabled after the date"
            },
            "locale": {
              "type": "string",
              "description": "serves as languange preference for the user"
            },
            "pwd_reset_uid": {
              "type": "string",
              "description": "in case of a password reset this serves as a substitute for the old password"
            },
            "first_login_at": {
              "type": "string",
              "format": "date-time",
              "description": "first login date"
            },
            "last_login_at": {
              "type": "string",
              "format": "date-time",
              "description": "last login date"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "created date"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "updated date"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{tenant_id}/users/{id}": {
      "get": {
        "summary": "Show user account",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          }
        ],
        "responses": {
          "200": {
            "description": "User view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update user account",
        "x-candos": [
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::Apps::Tenants::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app_id"
          },
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "image": {
                      "type": "object",
                      "description": "image in different sizes",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    },
                    "email": {
                      "type": "string",
                      "description": "the new e-mail address"
                    },
                    "locale": {
                      "type": "string",
                      "description": "language code"
                    },
                    "title": {
                      "type": "string",
                      "description": "User title"
                    },
                    "first_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "last_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "short": {
                      "type": "string",
                      "description": "User short sign"
                    },
                    "gender": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants": {
      "get": {
        "summary": "List Tenants of an App",
        "x-candos": [
          "~/apps.admin",
          "~/app-tenant.admin"
        ],
        "x-record-type": "tenant",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin\n- ~/app-tenant.admin\n---\nController: `Api::V1::Apps::TenantsController`\n\n",
        "tags": [
          "Tenants"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant app_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`, `modules_selected`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type",
          "modules_selected"
        ],
        "responses": {
          "200": {
            "description": "Actors::Tenants list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "modules_available": {
              "type": "array",
              "description": "available optional organization modules",
              "items": {
                "type": "string",
                "description": "available module name"
              }
            },
            "modules_selected": {
              "type": "array",
              "default": [

              ],
              "description": "selected optional organization modules",
              "items": {
                "type": "string",
                "description": "selected module name"
              }
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/tenants/{id}": {
      "get": {
        "summary": "Show Tenant of an App",
        "x-candos": [
          "~/apps.admin",
          "~/app-tenant.admin"
        ],
        "x-record-type": "tenant",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin\n- ~/app-tenant.admin\n---\nController: `Api::V1::Apps::TenantsController`\n\n",
        "tags": [
          "Tenants"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Tenant view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "modules_available": {
            "type": "array",
            "description": "available optional organization modules",
            "items": {
              "type": "string",
              "description": "available module name"
            }
          },
          "modules_selected": {
            "type": "array",
            "default": [

            ],
            "description": "selected optional organization modules",
            "items": {
              "type": "string",
              "description": "selected module name"
            }
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update Tenant of an App",
        "x-candos": [
          "~/apps.admin",
          "~/app-tenant.admin"
        ],
        "x-record-type": "tenant",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin\n- ~/app-tenant.admin\n---\nController: `Api::V1::Apps::TenantsController`\n\n",
        "tags": [
          "Tenants"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "modules_selected": {
                      "type": "array",
                      "default": [],
                      "description": "selected optional organization modules",
                      "items": {
                        "type": "string",
                        "description": "selected module name"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Tenant updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "modules_available": {
            "type": "array",
            "description": "available optional organization modules",
            "items": {
              "type": "string",
              "description": "available module name"
            }
          },
          "modules_selected": {
            "type": "array",
            "default": [

            ],
            "description": "selected optional organization modules",
            "items": {
              "type": "string",
              "description": "selected module name"
            }
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Tenant of an App",
        "x-candos": [
          "~/apps.admin",
          "~/app-tenant.admin"
        ],
        "x-record-type": "tenant",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin\n- ~/app-tenant.admin\n---\nController: `Api::V1::Apps::TenantsController`\n\n",
        "tags": [
          "Tenants"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Tenant deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "modules_available": {
            "type": "array",
            "description": "available optional organization modules",
            "items": {
              "type": "string",
              "description": "available module name"
            }
          },
          "modules_selected": {
            "type": "array",
            "default": [

            ],
            "description": "selected optional organization modules",
            "items": {
              "type": "string",
              "description": "selected module name"
            }
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/users/{user_id}/actors": {
      "get": {
        "summary": "List Actors",
        "x-candos": [
          "~/apps.admin+identity-management/users.reader+identity-management/actors.reader"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.reader+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Users::ActorsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor user_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actors list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id (of mapping)"
            },
            "actor_id": {
              "type": "string",
              "description": "unique record id of actor pointed to by this mapping"
            },
            "actor_type": {
              "type": "string",
              "enum": [
                "tenant",
                "group",
                "ou"
              ],
              "default": "ou",
              "description": "The type of this actor"
            },
            "parent_id": {
              "type": "string",
              "description": "The id of the actor this new actor will become a children of"
            },
            "parent_ids": {
              "type": "array",
              "description": "ids of parent actors",
              "items": {
                "type": "string"
              }
            },
            "map_actor_id": {
              "type": "string",
              "description": ""
            },
            "insertable_child_types": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the type of actor that is allowed as a child of this actor"
              }
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            },
            "deleted": {
              "type": "boolean",
              "description": "flag to check whether actor is deleted"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "created date"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "updated date"
            },
            "image_b64": {
              "type": "string",
              "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
            },
            "image": {
              "type": "object",
              "description": "image with different styles",
              "properties": {
                "large": {
                  "type": "string"
                },
                "medium": {
                  "type": "string"
                },
                "small": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Actor",
        "x-candos": [
          "~/apps.admin+identity-management/users.reader+identity-management/actors.writer"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.reader+identity-management/actors.writer\n---\nController: `Api::V1::Apps::Users::ActorsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actor_id": {
                      "type": "string",
                      "description": "unique record id of actor pointed to by this mapping"
                    },
                    "actor_type": {
                      "type": "string",
                      "enum": [
                        "tenant",
                        "group",
                        "ou"
                      ],
                      "default": "ou",
                      "description": "The type of this actor"
                    },
                    "parent_id": {
                      "type": "string",
                      "description": "The id of the actor this new actor will become a children of"
                    },
                    "parent_ids": {
                      "type": "array",
                      "description": "ids of parent actors",
                      "items": {
                        "type": "string"
                      }
                    },
                    "map_actor_id": {
                      "type": "string",
                      "description": ""
                    },
                    "insertable_child_types": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "the type of actor that is allowed as a child of this actor"
                      }
                    },
                    "children_count": {
                      "type": "number",
                      "description": "number of children below this actor"
                    },
                    "path": {
                      "type": "string",
                      "description": "the path of this actor within the global tree"
                    },
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "active": {
                      "type": "boolean",
                      "default": true,
                      "description": "indicating if this actor is available"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "flag to check whether actor is deleted"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "created date"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "updated date"
                    },
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "image": {
                      "type": "object",
                      "description": "image with different styles",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actor created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique record id of actor pointed to by this mapping"
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/users/{user_id}/actors/{id}": {
      "get": {
        "summary": "Show Actor",
        "x-candos": [
          "~/apps.admin+identity-management/users.reader+identity-management/actors.reader"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.reader+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Users::ActorsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actor view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique record id of actor pointed to by this mapping"
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Actor",
        "x-candos": [
          "~/apps.admin+identity-management/users.reader+identity-management/actors.writer"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.reader+identity-management/actors.writer\n---\nController: `Api::V1::Apps::Users::ActorsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Actor id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actor deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique record id of actor pointed to by this mapping"
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "insertable_child_types": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/users/{user_id}/functionalities": {
      "get": {
        "summary": "List Functionalities",
        "x-candos": [
          "~/apps.admin+identity-management/users.reader+identity-management/functionalities.reader"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.reader+identity-management/functionalities.reader\n---\nController: `Api::V1::Apps::Users::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality user_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `title`, `description`, `app`, `module`, `ident`, `quickfilter`, `_keywords`, `role_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "title",
          "description",
          "app",
          "module",
          "ident",
          "quickfilter",
          "_keywords",
          "role_ids"
        ],
        "responses": {
          "200": {
            "description": "Functionalities list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "functionality",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "role_ids": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "id of a role"
              }
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title"
            },
            "description": {
              "type": "string",
              "default": "description",
              "description": "a description about what this functionality allows to do"
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this functionality belongs to"
            },
            "module": {
              "type": "string",
              "default": "module",
              "description": "the module of the app this functionality belongs to"
            },
            "ident": {
              "type": "string",
              "default": "ident",
              "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/users/{user_id}/functionalities/{id}": {
      "get": {
        "summary": "Show Functionality",
        "x-candos": [
          "~/apps.admin+identity-management/users.reader+identity-management/functionalities.reader"
        ],
        "x-record-type": "functionality",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.reader+identity-management/functionalities.reader\n---\nController: `Api::V1::Apps::Users::FunctionalitiesController`\n\n",
        "tags": [
          "Functionalities"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Functionality id"
          }
        ],
        "responses": {
          "200": {
            "description": "Functionality view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "functionality",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this functionality allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this functionality belongs to"
          },
          "module": {
            "type": "string",
            "default": "module",
            "description": "the module of the app this functionality belongs to"
          },
          "ident": {
            "type": "string",
            "default": "ident",
            "description": "the action within the module (e.g. reader, writer, deleter, consumer, ...)"
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/users/{user_id}/roles": {
      "get": {
        "summary": "List Roles",
        "x-candos": [
          "~/apps.admin+identity-management/users.reader+identity-management/roles.reader"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.reader+identity-management/roles.reader\n---\nController: `Api::V1::Apps::Users::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role user_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `actors_app_id`, `app`, `title`, `description`, `name`, `write_protected`, `system`, `_keywords`, `functionality_ids`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "actors_app_id",
          "app",
          "title",
          "description",
          "name",
          "write_protected",
          "system",
          "_keywords",
          "functionality_ids"
        ],
        "responses": {
          "200": {
            "description": "Roles list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "role",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "title": {
              "type": "string",
              "default": "title",
              "description": "a descriptive title"
            },
            "description": {
              "type": "string",
              "default": "description",
              "description": "a description about what this role allows to do"
            },
            "app": {
              "type": "string",
              "default": "app-name",
              "description": "name of app this role belongs to"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/users/{user_id}/roles/{id}": {
      "get": {
        "summary": "Show role",
        "x-candos": [
          "~/apps.admin+identity-management/users.reader+identity-management/roles.reader"
        ],
        "x-record-type": "role",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.reader+identity-management/roles.reader\n---\nController: `Api::V1::Apps::Users::RolesController`\n\n",
        "tags": [
          "Roles"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "role id"
          }
        ],
        "responses": {
          "200": {
            "description": "Role view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "role",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique role name"
          },
          "title": {
            "type": "string",
            "default": "title",
            "description": "a descriptive title (current locale)"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale title"
              },
              "de": {
                "type": "string",
                "description": "the german locale title"
              }
            }
          },
          "description": {
            "type": "string",
            "description": "a description about what this role allows to do (current locale)"
          },
          "description_translations": {
            "type": "object",
            "description": "language keys here are dynamic and can consist of any supported language, minimum should be those languages of the configured app locales",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale description"
              },
              "de": {
                "type": "string",
                "description": "the german locale description"
              }
            }
          },
          "app": {
            "type": "string",
            "default": "app-name",
            "description": "name of app this role belongs to"
          },
          "functionality_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "id of a functionality assigned to this role"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/users/{user_id}/tenants": {
      "get": {
        "summary": "List Tenants a User has in an App",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "tenant",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Users::TenantsController`\n\n",
        "tags": [
          "Tenants"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant user_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`, `modules_selected`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type",
          "modules_selected"
        ],
        "responses": {
          "200": {
            "description": "Actors::Tenants list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "modules_available": {
              "type": "array",
              "description": "available optional organization modules",
              "items": {
                "type": "string",
                "description": "available module name"
              }
            },
            "modules_selected": {
              "type": "array",
              "default": [

              ],
              "description": "selected optional organization modules",
              "items": {
                "type": "string",
                "description": "selected module name"
              }
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/users/{user_id}/tenants/{id}": {
      "get": {
        "summary": "Show Tenant a User has in an App",
        "x-candos": [
          "~/apps.admin+identity-management/actors.reader"
        ],
        "x-record-type": "tenant",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/actors.reader\n---\nController: `Api::V1::Apps::Users::TenantsController`\n\n",
        "tags": [
          "Tenants"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant app_id"
          },
          {
            "name": "user_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant user_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Tenant view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_info",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actor_type": {
            "type": "string",
            "default": "ou",
            "description": "type of actor"
          },
          "modules_available": {
            "type": "array",
            "description": "available optional organization modules",
            "items": {
              "type": "string",
              "description": "available module name"
            }
          },
          "modules_selected": {
            "type": "array",
            "default": [

            ],
            "description": "selected optional organization modules",
            "items": {
              "type": "string",
              "description": "selected module name"
            }
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/users": {
      "get": {
        "summary": "List User accounts",
        "x-candos": [
          "~/apps.admin+identity-management/users.reader"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.reader\n---\nController: `Api::V1::Apps::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `id`, `actor_id`, `locale`, `email`, `gender`, `title`, `first_name`, `last_name`, `created_at`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "id",
          "actor_id",
          "locale",
          "email",
          "gender",
          "title",
          "first_name",
          "last_name",
          "created_at"
        ],
        "responses": {
          "200": {
            "description": "Users list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "user",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_id": {
              "type": "string",
              "description": "referenced actor id"
            },
            "email": {
              "type": "string",
              "description": "e-mail address"
            },
            "gender": {
              "type": "number",
              "enum": [
                0,
                1,
                2
              ],
              "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
            },
            "first_name": {
              "type": "string",
              "description": "first name"
            },
            "last_name": {
              "type": "string",
              "description": "last name"
            },
            "short": {
              "type": "string",
              "description": "short name (combination of first and last names)"
            },
            "image": {
              "type": "object",
              "description": "image in different sizes",
              "properties": {
                "large": {
                  "type": "string"
                },
                "medium": {
                  "type": "string"
                },
                "small": {
                  "type": "string"
                }
              }
            },
            "title": {
              "type": "string",
              "description": "an optional user title"
            },
            "mobile": {
              "type": "string",
              "description": "mobile number"
            },
            "active": {
              "type": "boolean",
              "description": "if set false the login will be disabled"
            },
            "invalid_at": {
              "type": "string",
              "format": "date-time",
              "description": "if set the login will be disabled after the date"
            },
            "locale": {
              "type": "string",
              "description": "serves as languange preference for the user"
            },
            "pwd_reset_uid": {
              "type": "string",
              "description": "in case of a password reset this serves as a substitute for the old password"
            },
            "first_login_at": {
              "type": "string",
              "format": "date-time",
              "description": "first login date"
            },
            "last_login_at": {
              "type": "string",
              "format": "date-time",
              "description": "last login date"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "created date"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "updated date"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/apps/{app_id}/users/{id}": {
      "get": {
        "summary": "Show user account",
        "x-candos": [
          "~/apps.admin+identity-management/users.reader"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.reader\n---\nController: `Api::V1::Apps::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          }
        ],
        "responses": {
          "200": {
            "description": "User view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update user account",
        "x-candos": [
          "~/apps.admin+identity-management/users.writer"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.writer\n---\nController: `Api::V1::Apps::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "image": {
                      "type": "object",
                      "description": "image in different sizes",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    },
                    "email": {
                      "type": "string",
                      "description": "the new e-mail address"
                    },
                    "locale": {
                      "type": "string",
                      "description": "language code"
                    },
                    "title": {
                      "type": "string",
                      "description": "User title"
                    },
                    "first_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "last_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "short": {
                      "type": "string",
                      "description": "User short sign"
                    },
                    "gender": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
                    },
                    "mobile": {
                      "type": "string",
                      "description": "mobile number"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user account",
        "x-candos": [
          "~/apps.admin+identity-management/users.writer"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/apps.admin+identity-management/users.writer\n---\nController: `Api::V1::Apps::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/{app}/users/confirmation": {
      "post": {
        "summary": "Create user account",
        "x-record-type": "user",
        "x-candos": "user",
        "description": "Controller: `Api::V1::Devise::ConfirmationsController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actor_id": {
                      "type": "string",
                      "description": "unique id of the users account"
                    },
                    "email": {
                      "type": "string",
                      "description": "the new e-mail address"
                    },
                    "first_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "last_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "short": {
                      "type": "string",
                      "description": "User short sign"
                    },
                    "title": {
                      "type": "string",
                      "description": "User title"
                    },
                    "gender": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
                    },
                    "mobile": {
                      "type": "string",
                      "description": "mobile number"
                    },
                    "locale": {
                      "type": "string",
                      "description": "language code"
                    },
                    "current_password": {
                      "type": "string",
                      "description": "the current password"
                    },
                    "password": {
                      "type": "string",
                      "description": "the new password"
                    },
                    "password_confirmation": {
                      "type": "string",
                      "description": "the new password (confirmation)"
                    },
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "image": {
                      "type": "object",
                      "description": "image in different sizes",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    },
                    "role_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "the role id assigned to the user"
                      }
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "candos": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "recent_invite_tokens": {
                      "type": "array",
                      "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
                      "items": {
                        "type": "string"
                      }
                    },
                    "otp_enabled": {
                      "type": "boolean",
                      "description": "if true the login needs to present an input for sending an OTP with the login"
                    },
                    "otp_provided": {
                      "type": "boolean",
                      "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
                    },
                    "otp_provisioning_qr_code": {
                      "type": "string",
                      "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
                    },
                    "otp_secret_key": {
                      "type": "string",
                      "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
                    },
                    "otp_backup_codes": {
                      "type": "array",
                      "description": "only after enabling OTP/MFA this will once show backup codes",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "get": {
        "summary": "Show user account",
        "x-record-type": "user",
        "x-candos": "user",
        "description": "Controller: `Api::V1::Devise::ConfirmationsController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app"
          }
        ],
        "responses": {
          "200": {
            "description": "User view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/{app}/users/password": {
      "post": {
        "summary": "Create user account",
        "x-record-type": "user",
        "x-candos": "user",
        "description": "Controller: `Api::V1::Devise::PasswordsController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actor_id": {
                      "type": "string",
                      "description": "unique id of the users account"
                    },
                    "email": {
                      "type": "string",
                      "description": "the new e-mail address"
                    },
                    "first_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "last_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "short": {
                      "type": "string",
                      "description": "User short sign"
                    },
                    "title": {
                      "type": "string",
                      "description": "User title"
                    },
                    "gender": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
                    },
                    "mobile": {
                      "type": "string",
                      "description": "mobile number"
                    },
                    "locale": {
                      "type": "string",
                      "description": "language code"
                    },
                    "current_password": {
                      "type": "string",
                      "description": "the current password"
                    },
                    "password": {
                      "type": "string",
                      "description": "the new password"
                    },
                    "password_confirmation": {
                      "type": "string",
                      "description": "the new password (confirmation)"
                    },
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "image": {
                      "type": "object",
                      "description": "image in different sizes",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    },
                    "role_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "the role id assigned to the user"
                      }
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "candos": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "recent_invite_tokens": {
                      "type": "array",
                      "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
                      "items": {
                        "type": "string"
                      }
                    },
                    "otp_enabled": {
                      "type": "boolean",
                      "description": "if true the login needs to present an input for sending an OTP with the login"
                    },
                    "otp_provided": {
                      "type": "boolean",
                      "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
                    },
                    "otp_provisioning_qr_code": {
                      "type": "string",
                      "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
                    },
                    "otp_secret_key": {
                      "type": "string",
                      "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
                    },
                    "otp_backup_codes": {
                      "type": "array",
                      "description": "only after enabling OTP/MFA this will once show backup codes",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update user account",
        "x-record-type": "user",
        "x-candos": "user",
        "description": "Controller: `Api::V1::Devise::PasswordsController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "app",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account app"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actor_id": {
                      "type": "string",
                      "description": "unique id of the users account"
                    },
                    "email": {
                      "type": "string",
                      "description": "the new e-mail address"
                    },
                    "first_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "last_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "short": {
                      "type": "string",
                      "description": "User short sign"
                    },
                    "title": {
                      "type": "string",
                      "description": "User title"
                    },
                    "gender": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
                    },
                    "mobile": {
                      "type": "string",
                      "description": "mobile number"
                    },
                    "locale": {
                      "type": "string",
                      "description": "language code"
                    },
                    "current_password": {
                      "type": "string",
                      "description": "the current password"
                    },
                    "password": {
                      "type": "string",
                      "description": "the new password"
                    },
                    "password_confirmation": {
                      "type": "string",
                      "description": "the new password (confirmation)"
                    },
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "image": {
                      "type": "object",
                      "description": "image in different sizes",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    },
                    "role_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "the role id assigned to the user"
                      }
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "candos": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "recent_invite_tokens": {
                      "type": "array",
                      "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
                      "items": {
                        "type": "string"
                      }
                    },
                    "otp_enabled": {
                      "type": "boolean",
                      "description": "if true the login needs to present an input for sending an OTP with the login"
                    },
                    "otp_provided": {
                      "type": "boolean",
                      "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
                    },
                    "otp_provisioning_qr_code": {
                      "type": "string",
                      "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
                    },
                    "otp_secret_key": {
                      "type": "string",
                      "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
                    },
                    "otp_backup_codes": {
                      "type": "array",
                      "description": "only after enabling OTP/MFA this will once show backup codes",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/register": {
      "post": {
        "summary": "Create user account",
        "x-record-type": "user",
        "x-candos": "user",
        "description": "Controller: `Api::V1::Devise::RegistrationsController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actor_id": {
                      "type": "string",
                      "description": "unique id of the users account"
                    },
                    "email": {
                      "type": "string",
                      "description": "the new e-mail address"
                    },
                    "first_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "last_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "short": {
                      "type": "string",
                      "description": "User short sign"
                    },
                    "title": {
                      "type": "string",
                      "description": "User title"
                    },
                    "gender": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
                    },
                    "mobile": {
                      "type": "string",
                      "description": "mobile number"
                    },
                    "locale": {
                      "type": "string",
                      "description": "language code"
                    },
                    "current_password": {
                      "type": "string",
                      "description": "the current password"
                    },
                    "password": {
                      "type": "string",
                      "description": "the new password"
                    },
                    "password_confirmation": {
                      "type": "string",
                      "description": "the new password (confirmation)"
                    },
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "image": {
                      "type": "object",
                      "description": "image in different sizes",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    },
                    "role_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "the role id assigned to the user"
                      }
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "candos": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "recent_invite_tokens": {
                      "type": "array",
                      "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
                      "items": {
                        "type": "string"
                      }
                    },
                    "otp_enabled": {
                      "type": "boolean",
                      "description": "if true the login needs to present an input for sending an OTP with the login"
                    },
                    "otp_provided": {
                      "type": "boolean",
                      "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
                    },
                    "otp_provisioning_qr_code": {
                      "type": "string",
                      "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
                    },
                    "otp_secret_key": {
                      "type": "string",
                      "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
                    },
                    "otp_backup_codes": {
                      "type": "array",
                      "description": "only after enabling OTP/MFA this will once show backup codes",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update user account",
        "x-record-type": "user",
        "x-candos": "user",
        "description": "Controller: `Api::V1::Devise::RegistrationsController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actor_id": {
                      "type": "string",
                      "description": "unique id of the users account"
                    },
                    "email": {
                      "type": "string",
                      "description": "the new e-mail address"
                    },
                    "first_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "last_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "short": {
                      "type": "string",
                      "description": "User short sign"
                    },
                    "title": {
                      "type": "string",
                      "description": "User title"
                    },
                    "gender": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
                    },
                    "mobile": {
                      "type": "string",
                      "description": "mobile number"
                    },
                    "locale": {
                      "type": "string",
                      "description": "language code"
                    },
                    "current_password": {
                      "type": "string",
                      "description": "the current password"
                    },
                    "password": {
                      "type": "string",
                      "description": "the new password"
                    },
                    "password_confirmation": {
                      "type": "string",
                      "description": "the new password (confirmation)"
                    },
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "image": {
                      "type": "object",
                      "description": "image in different sizes",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    },
                    "role_ids": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "the role id assigned to the user"
                      }
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "candos": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "recent_invite_tokens": {
                      "type": "array",
                      "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
                      "items": {
                        "type": "string"
                      }
                    },
                    "otp_enabled": {
                      "type": "boolean",
                      "description": "if true the login needs to present an input for sending an OTP with the login"
                    },
                    "otp_provided": {
                      "type": "boolean",
                      "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
                    },
                    "otp_provisioning_qr_code": {
                      "type": "string",
                      "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
                    },
                    "otp_secret_key": {
                      "type": "string",
                      "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
                    },
                    "otp_backup_codes": {
                      "type": "array",
                      "description": "only after enabling OTP/MFA this will once show backup codes",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user account",
        "x-record-type": "user",
        "x-candos": "user",
        "description": "Controller: `Api::V1::Devise::RegistrationsController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "app_user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id (of mapping)"
          },
          "actor_id": {
            "type": "string",
            "description": "unique id of the users account"
          },
          "email": {
            "type": "string",
            "description": "the new e-mail address"
          },
          "first_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "last_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "short": {
            "type": "string",
            "description": "User short sign"
          },
          "title": {
            "type": "string",
            "description": "User title"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "locale": {
            "type": "string",
            "description": "language code"
          },
          "current_password": {
            "type": "string",
            "description": "the current password"
          },
          "password": {
            "type": "string",
            "description": "the new password"
          },
          "password_confirmation": {
            "type": "string",
            "description": "the new password (confirmation)"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "the role id assigned to the user"
            }
          },
          "tenants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "candos": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "recent_invite_tokens": {
            "type": "array",
            "description": "a list of recent invite tokens to pass to the authenticated remote app so the app can process these",
            "items": {
              "type": "string"
            }
          },
          "otp_enabled": {
            "type": "boolean",
            "description": "if true the login needs to present an input for sending an OTP with the login"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "if otp_enabled this will be true if an OTP was provided to signal the login is complete"
          },
          "otp_provisioning_qr_code": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show an SVG image with a QR code to scan from an authenticator app"
          },
          "otp_secret_key": {
            "type": "string",
            "description": "only when enabling OTP/MFA this will show the secret key to set up an authenticator app"
          },
          "otp_backup_codes": {
            "type": "array",
            "description": "only after enabling OTP/MFA this will once show backup codes",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/email_blacklist": {
      "get": {
        "summary": "Show Email blacklist",
        "x-candos": [
          "identity-management/global.admin+identity-management/email-blacklists.reader"
        ],
        "x-record-type": "email_blacklist",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/global.admin+identity-management/email-blacklists.reader\n---\nController: `Api::V1::EmailBlacklistController`\n\n",
        "tags": [
          "Email blacklist"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `domain`, `active`, `_keywords`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "domain",
          "active",
          "_keywords"
        ],
        "responses": {
          "200": {
            "description": "EmailBlacklist view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "description": "record type",
          "default": "email_blacklist"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "domain": {
              "type": "string",
              "description": "blacklisted domain name"
            },
            "active": {
              "type": "string",
              "description": "controls if the domain name is actively being blacklisted"
            },
            "full_name": {
              "type": "string",
              "description": "full name"
            }
          }
        }
      }
    },
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "email_blacklist"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "domain": {
            "type": "string",
            "description": "blacklisted domain name"
          },
          "active": {
            "type": "string",
            "description": "controls if the domain name is actively being blacklisted"
          },
          "full_name": {
            "type": "string",
            "description": "full name"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Email blacklist",
        "x-candos": [
          "identity-management/global.admin+identity-management/email-blacklists.writer"
        ],
        "x-record-type": "email_blacklist",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/global.admin+identity-management/email-blacklists.writer\n---\nController: `Api::V1::EmailBlacklistController`\n\n",
        "tags": [
          "Email blacklist"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "domain": {
                      "type": "string",
                      "description": "blacklisted domain name"
                    },
                    "active": {
                      "type": "string",
                      "description": "controls if the domain name is actively being blacklisted"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailBlacklist created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "email_blacklist"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "domain": {
            "type": "string",
            "description": "blacklisted domain name"
          },
          "active": {
            "type": "string",
            "description": "controls if the domain name is actively being blacklisted"
          },
          "full_name": {
            "type": "string",
            "description": "full name"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update Email blacklist",
        "x-candos": [
          "identity-management/global.admin+identity-management/email-blacklists.writer"
        ],
        "x-record-type": "email_blacklist",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/global.admin+identity-management/email-blacklists.writer\n---\nController: `Api::V1::EmailBlacklistController`\n\n",
        "tags": [
          "Email blacklist"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "domain": {
                      "type": "string",
                      "description": "blacklisted domain name"
                    },
                    "active": {
                      "type": "string",
                      "description": "controls if the domain name is actively being blacklisted"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "EmailBlacklist updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "email_blacklist"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "domain": {
            "type": "string",
            "description": "blacklisted domain name"
          },
          "active": {
            "type": "string",
            "description": "controls if the domain name is actively being blacklisted"
          },
          "full_name": {
            "type": "string",
            "description": "full name"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Email blacklist",
        "x-candos": [
          "identity-management/global.admin+identity-management/email-blacklists.deleter"
        ],
        "x-record-type": "email_blacklist",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/global.admin+identity-management/email-blacklists.deleter\n---\nController: `Api::V1::EmailBlacklistController`\n\n",
        "tags": [
          "Email blacklist"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "EmailBlacklist deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "email_blacklist"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "domain": {
            "type": "string",
            "description": "blacklisted domain name"
          },
          "active": {
            "type": "string",
            "description": "controls if the domain name is actively being blacklisted"
          },
          "full_name": {
            "type": "string",
            "description": "full name"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/picker/actors": {
      "get": {
        "summary": "Show Actor",
        "x-candos": [
          "identity-management/actors.reader"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/actors.reader\n---\nController: `Api::V1::Picker::ActorsController`\n\n",
        "tags": [
          "Actors"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actor view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "insertable_child_types": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the type of actor that is allowed as a child of this actor"
              }
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            }
          }
        }
      }
    },
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "actor"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "leaf": {
            "type": "boolean",
            "description": ""
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "insertable_child_types": {
            "type": "array",
            "description": "for frontend ruleset only",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/picker/actors/{actor_id}/mappings": {
      "get": {
        "summary": "List Mappings",
        "x-candos": [
          "identity-management/actors.reader"
        ],
        "x-record-type": "actor_mappings",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/actors.reader\n---\nController: `Api::V1::Picker::MappingsController`\n\n",
        "tags": [
          "Mappings"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "actor_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Mapping actor_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`, `mapped_into_id`, `user_id`, `app_id`, `tenant_id`, `parent_template_actor_id`, `cached_role_ids`, `cached_role_names`, `cached_candos`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type",
          "mapped_into_id",
          "user_id",
          "app_id",
          "tenant_id",
          "parent_template_actor_id",
          "cached_role_ids",
          "cached_role_names",
          "cached_candos"
        ],
        "responses": {
          "200": {
            "description": "Actors::Mappings list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "description": "record type",
          "default": "actor_mappings"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "parent_id": {
              "type": "string",
              "description": "The id of the actor this new actor will become a children of"
            },
            "map_actor_id": {
              "type": "string",
              "description": ""
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            },
            "mapped": {
              "type": "boolean",
              "description": "true if already mapped into the parent, when false this record cannot be selected"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "created date"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "updated date"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/picker/tenant/{tenant_id}/users": {
      "get": {
        "summary": "List User accounts",
        "x-candos": [
          "~/list-tenant-users.reader"
        ],
        "x-record-type": "tenant_user_overview",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/list-tenant-users.reader\n---\nController: `Api::V1::Picker::TenantUsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account tenant_id"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `id`, `actor_id`, `locale`, `email`, `gender`, `title`, `first_name`, `last_name`, `created_at`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "id",
          "actor_id",
          "locale",
          "email",
          "gender",
          "title",
          "first_name",
          "last_name",
          "created_at"
        ],
        "responses": {
          "200": {
            "description": "Users list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "user",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_id": {
              "type": "string",
              "description": "referenced actor id"
            },
            "email": {
              "type": "string",
              "description": "e-mail address"
            },
            "gender": {
              "type": "number",
              "enum": [
                0,
                1,
                2
              ],
              "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
            },
            "first_name": {
              "type": "string",
              "description": "first name"
            },
            "last_name": {
              "type": "string",
              "description": "last name"
            },
            "short": {
              "type": "string",
              "description": "short name (combination of first and last names)"
            },
            "image": {
              "type": "object",
              "description": "image in different sizes",
              "properties": {
                "large": {
                  "type": "string"
                },
                "medium": {
                  "type": "string"
                },
                "small": {
                  "type": "string"
                }
              }
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "created date"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "updated date"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/picker/tenant/{tenant_id}/users/{id}": {
      "get": {
        "summary": "Show user account",
        "x-candos": [
          "~/list-tenant-users.reader"
        ],
        "x-record-type": "tenant_user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/list-tenant-users.reader\n---\nController: `Api::V1::Picker::TenantUsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          }
        ],
        "responses": {
          "200": {
            "description": "User view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actor_id": {
            "type": "string",
            "description": "referenced actor id"
          },
          "tenant_groups": {
            "type": "array",
            "description": "names of groups the user is member of within the current tenant",
            "items": {
              "type": "string"
            }
          },
          "tenant_group_ids": {
            "type": "array",
            "description": "reference ids of groups the user is member of within the current tenant",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "type": "string",
            "description": "e-mail address"
          },
          "gender": {
            "type": "number",
            "description": "numeric gender 1=male / 2=female / 3+anything"
          },
          "first_name": {
            "type": "string",
            "description": "first name"
          },
          "last_name": {
            "type": "string",
            "description": "last name"
          },
          "short": {
            "type": "string",
            "description": "short name (combination of first and last names)"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update user account",
        "x-candos": [
          "~/list-tenant-users.writer"
        ],
        "x-record-type": "tenant_user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- ~/list-tenant-users.writer\n---\nController: `Api::V1::Picker::TenantUsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account tenant_id"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "actor_id": {
                      "type": "string",
                      "description": "referenced actor id"
                    },
                    "tenant_groups": {
                      "type": "array",
                      "description": "names of groups the user is member of within the current tenant",
                      "items": {
                        "type": "string"
                      }
                    },
                    "tenant_group_ids": {
                      "type": "array",
                      "description": "reference ids of groups the user is member of within the current tenant",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "string",
                      "description": "e-mail address"
                    },
                    "gender": {
                      "type": "number",
                      "description": "numeric gender 1=male / 2=female / 3+anything"
                    },
                    "first_name": {
                      "type": "string",
                      "description": "first name"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name"
                    },
                    "short": {
                      "type": "string",
                      "description": "short name (combination of first and last names)"
                    },
                    "image": {
                      "type": "object",
                      "description": "image in different sizes",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "created date"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "updated date"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actor_id": {
            "type": "string",
            "description": "referenced actor id"
          },
          "tenant_groups": {
            "type": "array",
            "description": "names of groups the user is member of within the current tenant",
            "items": {
              "type": "string"
            }
          },
          "tenant_group_ids": {
            "type": "array",
            "description": "reference ids of groups the user is member of within the current tenant",
            "items": {
              "type": "string"
            }
          },
          "email": {
            "type": "string",
            "description": "e-mail address"
          },
          "gender": {
            "type": "number",
            "description": "numeric gender 1=male / 2=female / 3+anything"
          },
          "first_name": {
            "type": "string",
            "description": "first name"
          },
          "last_name": {
            "type": "string",
            "description": "last name"
          },
          "short": {
            "type": "string",
            "description": "short name (combination of first and last names)"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/user/account_activity": {
      "get": {
        "summary": "List Account activity",
        "x-record-type": "account_activity",
        "x-candos": "account_activity",
        "description": "Controller: `Api::V1::User::AccountActivityController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `user_id`, `token_id`, `ip`, `app`, `navigator`, `location`, `device`, `_keywords`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "user_id",
          "token_id",
          "ip",
          "app",
          "navigator",
          "location",
          "device",
          "_keywords"
        ],
        "responses": {
          "200": {
            "description": "AccountActivities list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "description": "record type",
          "default": "account_activity"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "location": {
              "type": "string",
              "description": "approximated geographic location by ip address that created the token"
            },
            "device": {
              "type": "string",
              "description": "user agent that created the token"
            },
            "app": {
              "type": "string",
              "description": "app this token belongs to"
            },
            "created_at": {
              "type": "string",
              "description": "timestamp when this invite was created"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update Account activity",
        "x-record-type": "account_activity",
        "x-candos": "account_activity",
        "description": "Controller: `Api::V1::User::AccountActivityController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "location": {
                      "type": "string",
                      "description": "approximated geographic location by ip address that created the token"
                    },
                    "device": {
                      "type": "string",
                      "description": "user agent that created the token"
                    },
                    "app": {
                      "type": "string",
                      "description": "app this token belongs to"
                    },
                    "created_at": {
                      "type": "string",
                      "description": "timestamp when this invite was created"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AccountActivity updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "account_activity"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "location": {
            "type": "string",
            "description": "approximated geographic location by ip address that created the token"
          },
          "device": {
            "type": "string",
            "description": "user agent that created the token"
          },
          "app": {
            "type": "string",
            "description": "app this token belongs to"
          },
          "created_at": {
            "type": "string",
            "description": "timestamp when this invite was created"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/user/account_logins": {
      "get": {
        "summary": "List Access Tokens",
        "x-record-type": "account_login",
        "x-candos": "account_login",
        "description": "Controller: `Api::V1::User::AccountLoginsController`\n\n",
        "tags": [
          "Account Logins"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Doorkeeper::AccessTokens list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "description": "record type",
          "default": "account_login"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "current": {
              "type": "boolean",
              "description": "true if this is the currently used token"
            },
            "location": {
              "type": "string",
              "description": "approximated geographic location by ip address that created the token"
            },
            "device": {
              "type": "string",
              "description": "user agent that created the token"
            },
            "app": {
              "type": "string",
              "description": "app this token belongs to"
            },
            "otp_required": {
              "type": "boolean",
              "description": "true if this token requires to be verified by an OTP"
            },
            "otp_provided": {
              "type": "boolean",
              "description": "true if the user has provided an OTP"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/user/account_logins/{id}": {
      "delete": {
        "summary": "Delete Access Token (logout)",
        "x-record-type": "account_login",
        "x-candos": "account_login",
        "description": "Controller: `Api::V1::User::AccountLoginsController`\n\n",
        "tags": [
          "Account Logins"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Access Token id"
          }
        ],
        "responses": {
          "200": {
            "description": "Doorkeeper::AccessToken deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "account_login"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "current": {
            "type": "boolean",
            "description": "true if this is the currently used token"
          },
          "location": {
            "type": "string",
            "description": "approximated geographic location by ip address that created the token"
          },
          "device": {
            "type": "string",
            "description": "user agent that created the token"
          },
          "app": {
            "type": "string",
            "description": "app this token belongs to"
          },
          "otp_required": {
            "type": "boolean",
            "description": "true if this token requires to be verified by an OTP"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "true if the user has provided an OTP"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/user/apps": {
      "get": {
        "summary": "List Apps",
        "x-record-type": "app",
        "x-candos": "app",
        "description": "Controller: `Api::V1::User::AppsController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type"
        ],
        "responses": {
          "200": {
            "description": "Actors::Apps list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "description": "record type",
          "default": "app"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "name": {
              "type": "string",
              "description": "unique app name"
            },
            "short_name": {
              "type": "string",
              "description": "short name"
            },
            "full_name": {
              "type": "string",
              "description": "full name"
            },
            "required_documents": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name/version of documents to show when logging into this app"
                }
              }
            },
            "requires_acceptance": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "name/boolean of documents that require user acceptance when logging into this app"
                }
              }
            },
            "image": {
              "type": "object",
              "description": "image with different styles",
              "properties": {
                "large": {
                  "type": "string"
                },
                "medium": {
                  "type": "string"
                },
                "small": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update App",
        "x-record-type": "app",
        "x-candos": "app",
        "description": "Controller: `Api::V1::User::AppsController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "unique app name"
                    },
                    "short_name": {
                      "type": "string",
                      "description": "short name"
                    },
                    "full_name": {
                      "type": "string",
                      "description": "full name"
                    },
                    "required_documents": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name/version of documents to show when logging into this app"
                        }
                      }
                    },
                    "requires_acceptance": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name/boolean of documents that require user acceptance when logging into this app"
                        }
                      }
                    },
                    "image": {
                      "type": "object",
                      "description": "image with different styles",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::App updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "app"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique app name"
          },
          "short_name": {
            "type": "string",
            "description": "short name"
          },
          "full_name": {
            "type": "string",
            "description": "full name"
          },
          "required_documents": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "name/version of documents to show when logging into this app"
              }
            }
          },
          "requires_acceptance": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "name/boolean of documents that require user acceptance when logging into this app"
              }
            }
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/user/authenticate_otp": {
      "post": {
        "summary": "Create Access Token",
        "x-candos": [
          "public"
        ],
        "x-record-type": "account_login",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- public\n---\nController: `Api::V1::User::AuthenticateOtpController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "current": {
                      "type": "boolean",
                      "description": "true if this is the currently used token"
                    },
                    "location": {
                      "type": "string",
                      "description": "approximated geographic location by ip address that created the token"
                    },
                    "device": {
                      "type": "string",
                      "description": "user agent that created the token"
                    },
                    "app": {
                      "type": "string",
                      "description": "app this token belongs to"
                    },
                    "otp_required": {
                      "type": "boolean",
                      "description": "true if this token requires to be verified by an OTP"
                    },
                    "otp_provided": {
                      "type": "boolean",
                      "description": "true if the user has provided an OTP"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Doorkeeper::AccessToken created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "account_login"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "current": {
            "type": "boolean",
            "description": "true if this is the currently used token"
          },
          "location": {
            "type": "string",
            "description": "approximated geographic location by ip address that created the token"
          },
          "device": {
            "type": "string",
            "description": "user agent that created the token"
          },
          "app": {
            "type": "string",
            "description": "app this token belongs to"
          },
          "otp_required": {
            "type": "boolean",
            "description": "true if this token requires to be verified by an OTP"
          },
          "otp_provided": {
            "type": "boolean",
            "description": "true if the user has provided an OTP"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/user/quits/{id}": {
      "delete": {
        "summary": "Delete user account",
        "x-candos": [
          "public"
        ],
        "x-record-type": "app",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- public\n---\nController: `Api::V1::User::QuitsController`\n\n",
        "tags": [
          "Current User"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "app"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "name": {
            "type": "string",
            "description": "unique app name"
          },
          "short_name": {
            "type": "string",
            "description": "short name"
          },
          "full_name": {
            "type": "string",
            "description": "full name"
          },
          "required_documents": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "name/version of documents to show when logging into this app"
              }
            }
          },
          "requires_acceptance": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "name/boolean of documents that require user acceptance when logging into this app"
              }
            }
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/user/tenant": {
      "get": {
        "summary": "List Tenants of the current user",
        "x-candos": [
          "public"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- public\n---\nController: `Api::V1::User::TenantsController`\n\n",
        "tags": [
          "Tenants"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `_id`, `created_at`, `updated_at`, `parent_id`, `parent_ids`, `depth`, `_keywords`, `role_ids`, `map_actor_id`, `template_actor_id`, `auto`, `deleted`, `deleted_at`, `active`, `name`, `title`, `short_name`, `full_name`, `path_ids`, `path`, `write_protected`, `system`, `image_data`, `children_count`, `actor_settings`, `_type`, `modules_selected`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "_id",
          "created_at",
          "updated_at",
          "parent_id",
          "parent_ids",
          "depth",
          "_keywords",
          "role_ids",
          "map_actor_id",
          "template_actor_id",
          "auto",
          "deleted",
          "deleted_at",
          "active",
          "name",
          "title",
          "short_name",
          "full_name",
          "path_ids",
          "path",
          "write_protected",
          "system",
          "image_data",
          "children_count",
          "actor_settings",
          "_type",
          "modules_selected"
        ],
        "responses": {
          "200": {
            "description": "Actors::Tenants list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "app_info",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_type": {
              "type": "string",
              "default": "ou",
              "description": "type of actor"
            },
            "insertable_child_types": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "the type of actor that is allowed as a child of this actor"
              }
            },
            "children_count": {
              "type": "number",
              "description": "number of children below this actor"
            },
            "path": {
              "type": "string",
              "description": "the path of this actor within the global tree"
            },
            "name": {
              "type": "string",
              "default": "short name",
              "description": "descriptive name (alphanumeric lowercase) to build a unique path"
            },
            "short_name": {
              "type": "string",
              "default": "short name of an organizational unit or group",
              "description": "short name of this actor"
            },
            "full_name": {
              "type": "string",
              "default": "full name of an organizational unit or group",
              "description": "full name of this actor"
            },
            "active": {
              "type": "boolean",
              "default": true,
              "description": "indicating if this actor is available"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create Tenant of the current user",
        "x-candos": [
          "public"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- public\n---\nController: `Api::V1::User::TenantsController`\n\n",
        "tags": [
          "Tenants"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "parent_id": {
                      "type": "string",
                      "description": "The id of the actor this new actor will become a children of"
                    },
                    "parent_ids": {
                      "type": "array",
                      "description": "ids of parent actors",
                      "items": {
                        "type": "string"
                      }
                    },
                    "map_actor_id": {
                      "type": "string",
                      "description": ""
                    },
                    "leaf": {
                      "type": "boolean",
                      "description": ""
                    },
                    "actor_type": {
                      "type": "string",
                      "enum": [
                        "tenant",
                        "group",
                        "ou"
                      ],
                      "default": "ou",
                      "description": "The type of this actor"
                    },
                    "insertable_child_types": {
                      "type": "array",
                      "description": "for frontend ruleset only",
                      "items": {
                        "type": "string",
                        "description": "the type of actor that is allowed as a child of this actor"
                      }
                    },
                    "children_count": {
                      "type": "number",
                      "description": "number of children below this actor"
                    },
                    "path": {
                      "type": "string",
                      "description": "the path of this actor within the global tree"
                    },
                    "name": {
                      "type": "string",
                      "default": "short name",
                      "description": "descriptive name (alphanumeric lowercase) to build a unique path"
                    },
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "title": {
                      "type": "string",
                      "default": "localized title of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale"
                        }
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "default": true,
                      "description": "indicating if this actor is available"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "flag to check whether actor is deleted"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "created date"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "updated date"
                    },
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "image": {
                      "type": "object",
                      "description": "image with different styles",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Tenant created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "actor"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "leaf": {
            "type": "boolean",
            "description": ""
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "insertable_child_types": {
            "type": "array",
            "description": "for frontend ruleset only",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/user/tenant/{id}": {
      "get": {
        "summary": "Show Tenant of the current user",
        "x-candos": [
          "public"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- public\n---\nController: `Api::V1::User::TenantsController`\n\n",
        "tags": [
          "Tenants"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Tenant view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "actor"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "leaf": {
            "type": "boolean",
            "description": ""
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "insertable_child_types": {
            "type": "array",
            "description": "for frontend ruleset only",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update Tenant of the current user",
        "x-candos": [
          "identity-management/actors.writer",
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/actors.writer\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::User::TenantsController`\n\n",
        "tags": [
          "Tenants"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "parent_id": {
                      "type": "string",
                      "description": "The id of the actor this new actor will become a children of"
                    },
                    "parent_ids": {
                      "type": "array",
                      "description": "ids of parent actors",
                      "items": {
                        "type": "string"
                      }
                    },
                    "map_actor_id": {
                      "type": "string",
                      "description": ""
                    },
                    "leaf": {
                      "type": "boolean",
                      "description": ""
                    },
                    "actor_type": {
                      "type": "string",
                      "enum": [
                        "tenant",
                        "group",
                        "ou"
                      ],
                      "default": "ou",
                      "description": "The type of this actor"
                    },
                    "insertable_child_types": {
                      "type": "array",
                      "description": "for frontend ruleset only",
                      "items": {
                        "type": "string",
                        "description": "the type of actor that is allowed as a child of this actor"
                      }
                    },
                    "children_count": {
                      "type": "number",
                      "description": "number of children below this actor"
                    },
                    "path": {
                      "type": "string",
                      "description": "the path of this actor within the global tree"
                    },
                    "name": {
                      "type": "string",
                      "default": "short name",
                      "description": "descriptive name (alphanumeric lowercase) to build a unique path"
                    },
                    "short_name": {
                      "type": "string",
                      "default": "short name of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "full_name": {
                      "type": "string",
                      "default": "full name of an organizational unit or group",
                      "description": "full name of this actor"
                    },
                    "title": {
                      "type": "string",
                      "default": "localized title of an organizational unit or group",
                      "description": "short name of this actor"
                    },
                    "title_translations": {
                      "type": "object",
                      "properties": {
                        "en": {
                          "type": "string",
                          "description": "the english locale"
                        },
                        "de": {
                          "type": "string",
                          "description": "the german locale"
                        }
                      }
                    },
                    "active": {
                      "type": "boolean",
                      "default": true,
                      "description": "indicating if this actor is available"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "flag to check whether actor is deleted"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "created date"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "updated date"
                    },
                    "image_b64": {
                      "type": "string",
                      "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
                    },
                    "image": {
                      "type": "object",
                      "description": "image with different styles",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Tenant updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "actor"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "leaf": {
            "type": "boolean",
            "description": ""
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "insertable_child_types": {
            "type": "array",
            "description": "for frontend ruleset only",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Tenant of the current user",
        "x-candos": [
          "identity-management/actors.writer",
          "~/app-tenant.admin",
          "~/tenant.admin"
        ],
        "x-record-type": "actor",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/actors.writer\n- ~/app-tenant.admin\n- ~/tenant.admin\n---\nController: `Api::V1::User::TenantsController`\n\n",
        "tags": [
          "Tenants"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Tenant id"
          }
        ],
        "responses": {
          "200": {
            "description": "Actors::Tenant deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "description": "record type",
        "default": "actor"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "parent_id": {
            "type": "string",
            "description": "The id of the actor this new actor will become a children of"
          },
          "parent_ids": {
            "type": "array",
            "description": "ids of parent actors",
            "items": {
              "type": "string"
            }
          },
          "map_actor_id": {
            "type": "string",
            "description": ""
          },
          "leaf": {
            "type": "boolean",
            "description": ""
          },
          "actor_type": {
            "type": "string",
            "enum": [
              "tenant",
              "group",
              "ou"
            ],
            "default": "ou",
            "description": "The type of this actor"
          },
          "insertable_child_types": {
            "type": "array",
            "description": "for frontend ruleset only",
            "items": {
              "type": "string",
              "description": "the type of actor that is allowed as a child of this actor"
            }
          },
          "children_count": {
            "type": "number",
            "description": "number of children below this actor"
          },
          "path": {
            "type": "string",
            "description": "the path of this actor within the global tree"
          },
          "name": {
            "type": "string",
            "default": "short name",
            "description": "descriptive name (alphanumeric lowercase) to build a unique path"
          },
          "short_name": {
            "type": "string",
            "default": "short name of an organizational unit or group",
            "description": "short name of this actor"
          },
          "full_name": {
            "type": "string",
            "default": "full name of an organizational unit or group",
            "description": "full name of this actor"
          },
          "title": {
            "type": "string",
            "default": "localized title of an organizational unit or group",
            "description": "short name of this actor"
          },
          "title_translations": {
            "type": "object",
            "properties": {
              "en": {
                "type": "string",
                "description": "the english locale"
              },
              "de": {
                "type": "string",
                "description": "the german locale"
              }
            }
          },
          "active": {
            "type": "boolean",
            "default": true,
            "description": "indicating if this actor is available"
          },
          "deleted": {
            "type": "boolean",
            "description": "flag to check whether actor is deleted"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          },
          "image_b64": {
            "type": "string",
            "description": "BASE64 encoded image (JPEG or PNG) to be used as the user`s avatar"
          },
          "image": {
            "type": "object",
            "description": "image with different styles",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "summary": "List User accounts",
        "x-candos": [
          "identity-management/global.admin+identity-management/users.reader"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/global.admin+identity-management/users.reader\n---\nController: `Api::V1::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string",
            "x-example": "1",
            "description": "the page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "type": "string",
            "x-example": "10",
            "description": "the number of records per page (might be limited on the server side)"
          },
          {
            "name": "padding",
            "in": "query",
            "type": "string",
            "x-example": "0",
            "description": "manually adjust db offset: (page*per_page)+padding"
          },
          {
            "name": "quickfilter",
            "in": "query",
            "type": "string",
            "description": "performs a search in keywords"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string",
            "description": "JSON Array of Objects to sort the results by one\nor more fields in the requested order.\nExample:\n`[{ property: \"field1\", direction: \"ASC\" }, { property: \"field2\", direction: \"DESC\" }]`\n"
          },
          {
            "name": "gridfilter",
            "in": "query",
            "type": "string",
            "description": "String in JSON format as described in https://www.ag-grid.com/javascript-grid-filtering/\n\n<details>\n  <summary>The model defined these fields as allowed for filtering.</summary>\n  `id`, `actor_id`, `locale`, `email`, `gender`, `title`, `first_name`, `last_name`, `created_at`\n</details>\n\n<details>\n  <summary>Detailed example</summary>\n  ```json\n   {\n     \"created_at\":{\n       \"filterType\":\"date\",\n       \"type\":\"inRange\",\n       \"dateFrom\":\"2019-03-31\",\n       \"dateTo\":\"2019-07-31\"\n     },\n     \"sign_in_count\":{\n       \"condition1\":{\n         \"filterType\":\"number\",\n         \"type\":\"inRange\",\n         \"filter\":0,\n         \"filterTo\":1000000\n       },\n       \"condition2\":{\n         \"filterType\":\"number\",\n         \"type\":\"notEqual\",\n         \"filter\":\"666.777\"\n       },\n       \"filterType\":\"number\",\n       \"operator\":\"AND\"\n     },\n     \"email\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"contains\",\n         \"filter\":\"gmail.com\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"equals\",\n         \"filter\":\"tdouglas@domain.local\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"OR\"\n     },\n     \"first_name\":{\n       \"condition1\":{\n         \"filterType\":\"text\",\n         \"type\":\"endsWith\",\n         \"filter\":\"gan\"\n       },\n       \"condition2\":{\n         \"filterType\":\"text\",\n         \"type\":\"startsWith\",\n         \"filter\":\"Te\"\n       },\n       \"filterType\":\"text\",\n       \"operator\":\"AND\"\n     },\n     \"last_name\":{\n       \"filterType\":\"text\",\n       \"type\":\"notContains\",\n       \"filter\":\"Brakus\"\n     }\n   }\n  ```\n</details>\n"
          }
        ],
        "x-gridfilter-fields": [
          "id",
          "actor_id",
          "locale",
          "email",
          "gender",
          "title",
          "first_name",
          "last_name",
          "created_at"
        ],
        "responses": {
          "200": {
            "description": "Users list",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "array",
    "items": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "unique record id"
        },
        "type": {
          "type": "string",
          "default": "user",
          "description": "defines the class of the data"
        },
        "attributes": {
          "type": "object",
          "description": "the main attributes of this record",
          "properties": {
            "id": {
              "type": "string",
              "description": "unique record id"
            },
            "actor_id": {
              "type": "string",
              "description": "referenced actor id"
            },
            "email": {
              "type": "string",
              "description": "e-mail address"
            },
            "gender": {
              "type": "number",
              "enum": [
                0,
                1,
                2
              ],
              "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
            },
            "first_name": {
              "type": "string",
              "description": "first name"
            },
            "last_name": {
              "type": "string",
              "description": "last name"
            },
            "short": {
              "type": "string",
              "description": "short name (combination of first and last names)"
            },
            "image": {
              "type": "object",
              "description": "image in different sizes",
              "properties": {
                "large": {
                  "type": "string"
                },
                "medium": {
                  "type": "string"
                },
                "small": {
                  "type": "string"
                }
              }
            },
            "title": {
              "type": "string",
              "description": "an optional user title"
            },
            "mobile": {
              "type": "string",
              "description": "mobile number"
            },
            "active": {
              "type": "boolean",
              "description": "if set false the login will be disabled"
            },
            "invalid_at": {
              "type": "string",
              "format": "date-time",
              "description": "if set the login will be disabled after the date"
            },
            "locale": {
              "type": "string",
              "description": "serves as languange preference for the user"
            },
            "pwd_reset_uid": {
              "type": "string",
              "description": "in case of a password reset this serves as a substitute for the old password"
            },
            "first_login_at": {
              "type": "string",
              "format": "date-time",
              "description": "first login date"
            },
            "last_login_at": {
              "type": "string",
              "format": "date-time",
              "description": "last login date"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "created date"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "updated date"
            }
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "post": {
        "summary": "Create user account",
        "x-candos": [
          "identity-management/global.admin+identity-management/users.writer"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/global.admin+identity-management/users.writer\n---\nController: `Api::V1::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "image": {
                      "type": "object",
                      "description": "image in different sizes",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    },
                    "pwd_reset_uid": {
                      "type": "string",
                      "description": "in case of a password reset this serves as a substitute for the old password"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "if set false the login will be disabled"
                    },
                    "email": {
                      "type": "string",
                      "description": "e-mail address"
                    },
                    "locale": {
                      "type": "string",
                      "description": "serves as languange preference for the user"
                    },
                    "title": {
                      "type": "string",
                      "description": "an optional user title"
                    },
                    "first_name": {
                      "type": "string",
                      "description": "first name"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name"
                    },
                    "short": {
                      "type": "string",
                      "description": "short name (combination of first and last names)"
                    },
                    "gender": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
                    },
                    "invalid_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "if set the login will be disabled after the date"
                    },
                    "mobile": {
                      "type": "string",
                      "description": "mobile number"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actor_id": {
            "type": "string",
            "description": "referenced actor id"
          },
          "email": {
            "type": "string",
            "description": "e-mail address"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "first_name": {
            "type": "string",
            "description": "first name"
          },
          "last_name": {
            "type": "string",
            "description": "last name"
          },
          "short": {
            "type": "string",
            "description": "short name (combination of first and last names)"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "title": {
            "type": "string",
            "description": "an optional user title"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "active": {
            "type": "boolean",
            "description": "if set false the login will be disabled"
          },
          "invalidate": {
            "type": "boolean",
            "description": "returns true if an invalid_at date is present"
          },
          "invalid_at": {
            "type": "string",
            "format": "date-time",
            "description": "if set the login will be disabled after the date"
          },
          "locale": {
            "type": "string",
            "description": "serves as languange preference for the user"
          },
          "pwd_reset_uid": {
            "type": "string",
            "description": "in case of a password reset this serves as a substitute for the old password"
          },
          "first_login_at": {
            "type": "string",
            "format": "date-time",
            "description": "first login date"
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time",
            "description": "last login date"
          },
          "candos": {
            "type": "array",
            "description": "global candos the user has consolidated over all tenants",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "summary": "Show user account",
        "x-candos": [
          "identity-management/global.admin+identity-management/users.reader"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/global.admin+identity-management/users.reader\n---\nController: `Api::V1::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          }
        ],
        "responses": {
          "200": {
            "description": "User view",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actor_id": {
            "type": "string",
            "description": "referenced actor id"
          },
          "email": {
            "type": "string",
            "description": "e-mail address"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "first_name": {
            "type": "string",
            "description": "first name"
          },
          "last_name": {
            "type": "string",
            "description": "last name"
          },
          "short": {
            "type": "string",
            "description": "short name (combination of first and last names)"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "title": {
            "type": "string",
            "description": "an optional user title"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "active": {
            "type": "boolean",
            "description": "if set false the login will be disabled"
          },
          "invalidate": {
            "type": "boolean",
            "description": "returns true if an invalid_at date is present"
          },
          "invalid_at": {
            "type": "string",
            "format": "date-time",
            "description": "if set the login will be disabled after the date"
          },
          "locale": {
            "type": "string",
            "description": "serves as languange preference for the user"
          },
          "pwd_reset_uid": {
            "type": "string",
            "description": "in case of a password reset this serves as a substitute for the old password"
          },
          "first_login_at": {
            "type": "string",
            "format": "date-time",
            "description": "first login date"
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time",
            "description": "last login date"
          },
          "candos": {
            "type": "array",
            "description": "global candos the user has consolidated over all tenants",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "put": {
        "summary": "Update user account",
        "x-candos": [
          "identity-management/global.admin+identity-management/users.writer"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/global.admin+identity-management/users.writer\n---\nController: `Api::V1::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          },
          {
            "name": "data",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "the main attributes of this record",
                  "properties": {
                    "image": {
                      "type": "object",
                      "description": "image in different sizes",
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      }
                    },
                    "pwd_reset_uid": {
                      "type": "string",
                      "description": "in case of a password reset this serves as a substitute for the old password"
                    },
                    "active": {
                      "type": "boolean",
                      "description": "if set false the login will be disabled"
                    },
                    "email": {
                      "type": "string",
                      "description": "e-mail address"
                    },
                    "locale": {
                      "type": "string",
                      "description": "serves as languange preference for the user"
                    },
                    "title": {
                      "type": "string",
                      "description": "an optional user title"
                    },
                    "first_name": {
                      "type": "string",
                      "description": "first name"
                    },
                    "last_name": {
                      "type": "string",
                      "description": "last name"
                    },
                    "short": {
                      "type": "string",
                      "description": "short name (combination of first and last names)"
                    },
                    "gender": {
                      "type": "number",
                      "enum": [
                        0,
                        1,
                        2
                      ],
                      "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
                    },
                    "invalid_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "if set the login will be disabled after the date"
                    },
                    "mobile": {
                      "type": "string",
                      "description": "mobile number"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actor_id": {
            "type": "string",
            "description": "referenced actor id"
          },
          "email": {
            "type": "string",
            "description": "e-mail address"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "first_name": {
            "type": "string",
            "description": "first name"
          },
          "last_name": {
            "type": "string",
            "description": "last name"
          },
          "short": {
            "type": "string",
            "description": "short name (combination of first and last names)"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "title": {
            "type": "string",
            "description": "an optional user title"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "active": {
            "type": "boolean",
            "description": "if set false the login will be disabled"
          },
          "invalidate": {
            "type": "boolean",
            "description": "returns true if an invalid_at date is present"
          },
          "invalid_at": {
            "type": "string",
            "format": "date-time",
            "description": "if set the login will be disabled after the date"
          },
          "locale": {
            "type": "string",
            "description": "serves as languange preference for the user"
          },
          "pwd_reset_uid": {
            "type": "string",
            "description": "in case of a password reset this serves as a substitute for the old password"
          },
          "first_login_at": {
            "type": "string",
            "format": "date-time",
            "description": "first login date"
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time",
            "description": "last login date"
          },
          "candos": {
            "type": "array",
            "description": "global candos the user has consolidated over all tenants",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user account",
        "x-candos": [
          "identity-management/global.admin+identity-management/users.deleter"
        ],
        "x-record-type": "user",
        "description": "To use this endpoint the current user needs to be authorized for the tenant to do any of these\n- identity-management/global.admin+identity-management/users.deleter\n---\nController: `Api::V1::UsersController`\n\n",
        "tags": [
          "User accounts"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "user account id"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted",
            "schema": {
              "type": "object",
              "properties": {
  "data": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string",
        "description": "unique record id"
      },
      "type": {
        "type": "string",
        "default": "user",
        "description": "defines the class of the data"
      },
      "attributes": {
        "type": "object",
        "description": "the main attributes of this record",
        "properties": {
          "id": {
            "type": "string",
            "description": "unique record id"
          },
          "actor_id": {
            "type": "string",
            "description": "referenced actor id"
          },
          "email": {
            "type": "string",
            "description": "e-mail address"
          },
          "gender": {
            "type": "number",
            "enum": [
              0,
              1,
              2
            ],
            "description": "Gender identifier\n* 0 - Unspecified\n* 1 - Male\n* 2 - Female\n"
          },
          "first_name": {
            "type": "string",
            "description": "first name"
          },
          "last_name": {
            "type": "string",
            "description": "last name"
          },
          "short": {
            "type": "string",
            "description": "short name (combination of first and last names)"
          },
          "image": {
            "type": "object",
            "description": "image in different sizes",
            "properties": {
              "large": {
                "type": "string"
              },
              "medium": {
                "type": "string"
              },
              "small": {
                "type": "string"
              }
            }
          },
          "title": {
            "type": "string",
            "description": "an optional user title"
          },
          "mobile": {
            "type": "string",
            "description": "mobile number"
          },
          "active": {
            "type": "boolean",
            "description": "if set false the login will be disabled"
          },
          "invalidate": {
            "type": "boolean",
            "description": "returns true if an invalid_at date is present"
          },
          "invalid_at": {
            "type": "string",
            "format": "date-time",
            "description": "if set the login will be disabled after the date"
          },
          "locale": {
            "type": "string",
            "description": "serves as languange preference for the user"
          },
          "pwd_reset_uid": {
            "type": "string",
            "description": "in case of a password reset this serves as a substitute for the old password"
          },
          "first_login_at": {
            "type": "string",
            "format": "date-time",
            "description": "first login date"
          },
          "last_login_at": {
            "type": "string",
            "format": "date-time",
            "description": "last login date"
          },
          "candos": {
            "type": "array",
            "description": "global candos the user has consolidated over all tenants",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "created date"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "updated date"
          }
        }
      }
    }
  },
  "meta": {
    "type": "object",
    "properties": {
      "total": {
        "type": "number",
        "description": "number of total records"
      },
      "json_api_options": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "default": 10,
            "description": "page size - maximum number of records returned in a request"
          },
          "page": {
            "type": "number",
            "default": 1,
            "description": "the current page number"
          },
          "fields": {
            "type": "object",
            "description": "if the request was sent with fields parameter (comma separated field names) this shows which fields were requested",
            "properties": {
            }
          }
        }
      },
      "locale": {
        "type": "string",
        "default": "en",
        "description": "the currently selected locale"
      },
      "msg": {
        "type": "object",
        "description": "info about the request",
        "properties": {
          "success": {
            "type": "boolean",
            "default": true,
            "description": "indicates successful requests"
          },
          "error": {
            "anyOf": [
              {
                "type": "string",
                "description": "if unsuccessful contains an error message"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    }
  }
}
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "description": "Token based authentication Header. Authenticate and then copy the token into this field and prefix with \"Bearer \" and a space.",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}